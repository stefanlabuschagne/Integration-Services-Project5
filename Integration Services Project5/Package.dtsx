<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/3/2014 2:52:34 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="59GR5W1"
  DTS:CreatorName="TREASURY\vul2214"
  DTS:DTSID="{9CFFCCF4-C546-46C5-B6FE-CCA6F14F2533}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="7177"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="284"
  DTS:VersionGUID="{83F5C92A-E2F6-4142-B46F-594417371DEE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.FINANCIALS_CAP.sa1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{387B0868-CBFF-4D71-80D5-340D72721082}"
      DTS:ObjectName="10.125.153.14.FINANCIALS_CAP.sa1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=FINANCIALS_CAP;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABmyWdvrIEcp7tTgRMOTzw9AAAAAASAAACgAAAAEAAAAHfWCDZUU9rGqgCwNsWXl6wYAAAA2nRR6J2vK+iUyWn2S47CWtiAwvJknKcvFAAAALzvdzeKdPDvMOWSjux214mraTNp</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.FINANCIALS_RESP_SEG.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B44F6E1A-CB58-4467-B486-0D23E65A33C8}"
      DTS:ObjectName="10.125.153.14.FINANCIALS_RESP_SEG.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=FINANCIALS_RESP_SEG;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADCKV9L6Yso2fSB2XI38n6bAAAAAASAAACgAAAAEAAAAOI2k0GZnmlo+zsmIAZWPawYAAAAKPHXznWKmXaHYRzVcbeC1zNum5hRNHKEFAAAAO2nsFjDeIuoAfERr64UeKOQyBPv</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.HEADCOUNT.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{39BEEE96-B742-458B-B0F4-F30937F872AF}"
      DTS:ObjectName="10.125.153.14.HEADCOUNT.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=HEADCOUNT;Provider=SQLNCLI11.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAEKoSDq4pEhNOZWiKvvVJPAAAAAASAAACgAAAAEAAAAGlVj8+869T0iGuJpCJgCYsYAAAA0rAxR/6DYhjbvCEePQgv94i7uJLEfc0tFAAAANK421YGFpNIDpmdREhrdK5rJwBH</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.IIS.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2A24BFE2-146C-47FE-A203-7562C26D1927}"
      DTS:ObjectName="10.125.153.14.IIS.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=IIS;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAs42T31P9Fo6GOUr7ZxaeOAAAAAASAAACgAAAAEAAAAEYWNTVU+Nu3CCBmRug9x8EYAAAAfwcuRIYG9f47LiZO9xd5PtJoNqvSCNM5FAAAAJoiQJfwc3znkmlJdc3FG48V76Sw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.LABOUR_OCT2013.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{29A3822B-C8C0-484B-95DB-A7FEC2DC3A0F}"
      DTS:ObjectName="10.125.153.14.LABOUR_OCT2013.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=LABOUR_OCT2013;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADg/TUzJfs2SPPCbmwtXFe2AAAAAASAAACgAAAAEAAAAA2/pRQQPYl4tuX6zT1K/L8YAAAA2JHcmABUGJ5+ruY2b33iyG9RGSgsy27vFAAAAHiafdT6TOerjA+F0ZYRd9ak4rOV</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.LEAVE.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{8A3CFEDA-4D0B-4FF4-90B0-025B1479EB0D}"
      DTS:ObjectName="10.125.153.14.LEAVE.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=LEAVE;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAD9+/ES6gk9WRakjamWomK6AAAAAASAAACgAAAAEAAAALIWdp1dlF/Nn2dS7kMBjZ8YAAAAiF84MfRSRzvCNXHo+4UA/bnoRkFdxxDxFAAAACOQE9xGXI/9GVBNXkZxWdLiz8GY</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.LOGIS.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{291198DE-146E-49AC-A0B3-CDEC0A16E29D}"
      DTS:ObjectName="10.125.153.14.LOGIS.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=LOGIS;Provider=SQLNCLI11.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAY5rKmbAysGC6dJpVVZDMgAAAAAASAAACgAAAAEAAAAE3eGTdSPx85pYa0wwihkJgYAAAA0LpLaPceX67N09NQGBoUn81W79OZvIaNFAAAANwTL8gH56Oi1vXHJp8xRHeo1fkA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.LOGIS_BOE.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{A43FA7DE-B434-420A-A34A-DC59413B03BE}"
      DTS:ObjectName="10.125.153.14.LOGIS_BOE.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=LOGIS_BOE;Provider=SQLNCLI11.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACS7P5mm1UW8BMbVJE+F3+UAAAAAASAAACgAAAAEAAAACXFlpUWkmFNgiug3jVl2ZMYAAAAGu87qgVrMKm8chnw++UKth4PwQ/FetcrFAAAAL/AMZxIJyAT6aj/SzFt2kh5LYub</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.LOGIS_DISNOTES.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6503B277-333D-4CBB-A4D3-7D14B9B977FE}"
      DTS:ObjectName="10.125.153.14.LOGIS_DISNOTES.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=LOGIS_DISNOTES;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAA2jckljwspR3sbiw4eq3pUAAAAAASAAACgAAAAEAAAAB6dP3nyPUSb69dBCcgnft8YAAAAcq2TZ9RyLEI7smgBqQXjDP8Bi2RCxUvMFAAAAPDT7LLgsxCr5nHBE/cIkzmKbdAV</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.POSTS.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0C86FA83-885F-4683-85EC-1F02CAE9F75D}"
      DTS:ObjectName="10.125.153.14.POSTS.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=POSTS;Provider=SQLNCLI11.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABzdl7iW2e1jf8tM+LoicUHAAAAAASAAACgAAAAEAAAANHU+BOFsZ5tNsgIlohWf9sYAAAA7/3P95enGC1zxp9oa/ljDUUoF86KTe/FFAAAAI4tIUfF2gv/YwFIoYsW8+fHRf7O</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.RANDGR.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{484E5703-0E2D-4FD7-964C-02254CD924DE}"
      DTS:ObjectName="10.125.153.14.RANDGR.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=RANDGR;Provider=SQLNCLI11.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABUfYQaJ/XQZF/ejUW59uAgAAAAAASAAACgAAAAEAAAAMbpd98HpPj00SvG95++tpcYAAAAnOQVLvNVQYIkeHXvB7Rv/WyV0BFS+2TyFAAAAOp4rCiurAg12Ldfjm1Cf5iF3aEM</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{33873B2C-40A4-403B-8A7F-87124A98DA70}"
      DTS:ObjectName="10.125.153.14.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{33873B2C-40A4-403B-8A7F-87124A98DA70}10.123.45.210.sa;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.sa 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DDE67D21-C004-4F5D-A10F-0DA3EA45AC9A}"
      DTS:ObjectName="10.125.153.14.sa 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{DDE67D21-C004-4F5D-A10F-0DA3EA45AC9A}10.125.153.14.sa 1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5305E0B2-4C7E-4CEF-A668-E406DD257EFF}"
      DTS:ObjectName="10.125.153.14.TREE_STRUCTURES.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=TREE_STRUCTURES;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADJgesq3SVld6Rub19m/rWsAAAAAASAAACgAAAAEAAAAF6RW22UsME69FflEXgEdScYAAAAfjOEa4G/XDp5zckiYCvjMmHSaJXJkdSkFAAAAGIUicxyD0LhUiEwKMFevWq7TCdQ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{D121EBEB-F713-424A-BECF-3F1331959258}"
      DTS:ObjectName="10.125.153.14.TREE_STRUCTURES.sa1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.14;User ID=sa;Initial Catalog=TREE_STRUCTURES;Persist Security Info=True;Application Name=SSIS-Package-{D121EBEB-F713-424A-BECF-3F1331959258}10.123.45.210.TREE_STRUCTURES.sa1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAB0KE6mctFs6vOFa3KyzO9CAAAAAASAAACgAAAAEAAAALtXS+TUdbVgtMiugzKu/ZsYAAAAHdqj7P+coMLxmEKTSWjWjAcpMfbLSsWOFAAAAKb1msCRkLguv8Gzd063Su0Jsu1T</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.125.153.34.TREE_STRUCTURES.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CE143463-1BAD-48A2-9330-C0C25C971F7E}"
      DTS:ObjectName="10.125.153.34.TREE_STRUCTURES.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.125.153.34;User ID=sa;Initial Catalog=TREE_STRUCTURES;Provider=SQLNCLI11.1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA/2mcNDl500e3IIq1P/KWjAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAWpy3HPgz/kbetsiEe9ru4AAAAAASAAACgAAAAEAAAAEz/MkcJ7QRqucMkiKCSjYAYAAAALNbuzxHhrm3iiVXBLldfqlST4AcOPYURFAAAAFTNvTaBdEGIuGxR1UIWtqcWgzMY</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9952F866-8EA0-48A8-8E67-7D0B7A113D92}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="7177"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\TabUsage\Tabusage.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Date"
              DTS:DTSID="{6BBE4E76-0AC5-4E97-93DB-8418820949D2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="dbase"
              DTS:DTSID="{7B311AFF-F97E-46CF-B803-9B659CC3A096}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TAB_CONTENT"
              DTS:DTSID="{0E0372BB-5F0F-47A2-9455-BE8CF68E44FC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="300"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="COMPONENT_DESCRIPTION"
              DTS:DTSID="{F6D406DA-2454-4F05-8E67-D79F8FEC3CCF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Tree"
              DTS:DTSID="{585DEA43-0DE1-4E86-97C1-7965D0AE4FF6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Level"
              DTS:DTSID="{A55B28A4-2391-4FD1-970C-CA95363B1208}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="Count All"
              DTS:DTSID="{DE801EEF-5B94-47D3-8EFF-E1D2B3469A96}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85373200-87F0-474E-A085-4A8BC5F09548}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBASE">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4308416-4737-43F9-BBFD-C392D1B73F5C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{745E8E42-2971-40A4-81D9-2730AEC92F57}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LOAD">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{402B2DC9-03BC-4716-90BC-DE325B04F8BD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SUFFIX">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9B45DDF4-2E78-494A-B25B-8D8FEB271B82}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Aggregate 1"
              componentClassID="DTSTransform.Aggregate.3"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate 1"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[dbase]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]"
                      name="Date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]"
                      name="dbase">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[dbase]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]"
                      name="id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[id]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]"
                      name="load">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[load]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]"
                      name="suffix">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[suffix]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]"
                      name="Count all">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Data Flow Task\0:invalid}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Conditional Split  - PER DATABASE"
              componentClassID="DTSTransform.ConditionalSplit.3"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split  - PER DATABASE"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_FINANCIALS_CAP]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_FINANCIALS_CAP"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "XFINANCIALS_CAP"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "XFINANCIALS_CAP"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_FINANCIALS_RESP_SEG]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_FINANCIALS_RESP_SEG"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "XFINANCIALS_RESP_SEG"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "XFINANCIALS_RESP_SEG"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LOGIS]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LOGIS"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "XLOGIS"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "XLOGIS"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LOGIS_DISNOTES]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LOGIS_DISNOTES"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "XLOGIS_DISNOTES"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "XLOGIS_DISNOTES"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LOGIS_BOE]"
                  description="Output 5 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LOGIS_BOE"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "XLOGIS_BOE"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "XLOGIS_BOE"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">4</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_HEADCOUNT]"
                  description="Output 6 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_HEADCOUNT"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "HEADCOUNT"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "HEADCOUNT"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">5</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LEAVE]"
                  description="Output 7 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LEAVE"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "LEAVE"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "LEAVE"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">6</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_POSTS]"
                  description="Output 8 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_POSTS"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "POSTS"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "POSTS"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">7</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_RANDGR]"
                  description="Output 9 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_RANDGR"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "RANDGR"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "RANDGR"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">8</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LABOUR]"
                  description="Output 10 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LABOUR"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "LABOUR_OCT2013"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "LABOUR_OCT2013"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">9</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_HEADCOUNT_NEW]"
                  description="Output 11 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_HEADCOUNT_NEW"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "HEADCOUNT_NEW"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "HEADCOUNT_NEW"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">10</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LEAVE_NEW]"
                  description="Output 12 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LEAVE_NEW"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "LEAVE_NEW"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "LEAVE_NEW"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">11</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_RANDGR_NEW]"
                  description="Output 13 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_RANDGR_NEW"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "RANDGR_NEW"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "RANDGR_NEW"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">12</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_POSTS_NEW]"
                  description="Output 14 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_POSTS_NEW"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "POSTS_NEW"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "POSTS_NEW"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">13</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LABOUR_NEW]"
                  description="Output 15 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Dbase_LABOUR_NEW"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]} == "LABOUR_NEW"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">dbase == "LABOUR_NEW"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">14</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\CSV File Destination"
              componentClassID="DTSAdapter.FlatFileDestination.3"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="7177"
              name="CSV File Destination">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\CSV File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Date]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[dbase]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[TAB_CONTENT]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[COMPONENT_DESCRIPTION]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      cachedSortKeyPosition="5"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Tree]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Tree]" />
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      cachedSortKeyPosition="6"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Level]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Level]" />
                    <inputColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      cachedSortKeyPosition="7"
                      externalMetadataColumnId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Count All]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Count All]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="dbase" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="TAB_CONTENT" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      name="COMPONENT_DESCRIPTION" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      name="Tree" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Level]"
                      dataType="i4"
                      name="Level" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input].ExternalColumns[Count All]"
                      dataType="ui8"
                      name="Count All" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\DAILY or FUNC"
              componentClassID="DTSTransform.ConditionalSplit.3"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="DAILY or FUNC"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\DAILY or FUNC.Outputs[SUFFIX_DAILY]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="SUFFIX_DAILY"
                  synchronousInputId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]} == "_DAILY"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">suffix == "_DAILY"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\DAILY or FUNC.Outputs[SUFFIX_FUNC]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="SUFFIX_FUNC"
                  synchronousInputId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]} == "_FUNC"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">suffix == "_FUNC"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\DAILY or FUNC.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\DAILY or FUNC.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\DAILY or FUNC.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\DAILY or FUNC.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\DAILY or FUNC.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\DAILY or FUNC.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ? and [refTable].[TREE_STRUCT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.FINANCIALS_CAP.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.FINANCIALS_CAP.sa1]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TREE_STRUCT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\2121:invalid};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.FINANCIALS_RESP_SEG.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.FINANCIALS_RESP_SEG.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION HEADCOUNT"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.HEADCOUNT.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.HEADCOUNT.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION HEADCOUNT_NEW"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.HEADCOUNT.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.HEADCOUNT.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LABOUR_NEW"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LABOUR_OCT2013.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LABOUR_OCT2013.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LABOUR_OCT2013"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LABOUR_OCT2013.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LABOUR_OCT2013.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LEAVE"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LEAVE.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LEAVE.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LEAVE_NEW"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LEAVE.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LEAVE.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LOGIS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LOGIS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LOGIS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LOGIS_BOE"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LOGIS_BOE.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LOGIS_BOE.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION LOGIS_DISNOTES"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\2121:invalid};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.LOGIS_DISNOTES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.LOGIS_DISNOTES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION POSTS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.POSTS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.POSTS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION POSTS_NEW"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.POSTS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.POSTS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION RANDGR"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.RANDGR.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.RANDGR.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TAB DESCRIPTION RANDGR_NEW"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[TABS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[TABS]) [refTable]
where [refTable].[TABLE_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SORT_SEQUENCE" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TAB_CONTENT" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TABLE_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="TREE_STRUCT" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LEVELS" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.RANDGR.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.RANDGR.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Inputs[Lookup Input].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TABLE_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">TAB_CONTENT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DAILY_STRUCT_CAP]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DAILY_STRUCT_CAP]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[FINANCIALS_RESP_SEG]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[FINANCIALS_RESP_SEG]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LOGIS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LOGIS]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LOGIS_DISNOTES]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LOGIS_DISNOTES]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LOGIS_BOE]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LOGIS_BOE]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[HEADCOUNT]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[HEADCOUNT]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LEAVE]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LEAVE]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[POSTS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[POSTS]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[RANDGR]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[RANDGR]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 1 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LABOUR_OCT2013]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LABOUR_OCT2013]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 1 1 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[RANDGR_NEW]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[RANDGR_NEW]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 1 1 2 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LABOUR_NEW]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LABOUR_NEW]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 1 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[POSTS_NEW]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[POSTS_NEW]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 1 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[LEAVE_NEW]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[LEAVE_NEW]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 1 2 1 1 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[HEADCOUNT_NEW]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[HEADCOUNT_NEW]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup TREE ITEM 2"
              componentClassID="DTSTransform.Lookup.3"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup TREE ITEM 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[FUNCTIONAL_STRUCT_CAP]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[FUNCTIONAL_STRUCT_CAP]) [refTable]
where [refTable].[COMPONENT] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="COMPONENT_DESCRIPTION" dataType="DT_STR" length="300" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PARENT_COMPONENT" dataType="DT_STR" length="35" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup TREE ITEM 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup TREE ITEM 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 2.Inputs[Lookup Input].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COMPONENT</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="300"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">COMPONENT_DESCRIPTION</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup TREE ITEM 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\NO MATCH"
              componentClassID="DTSTransform.UnionAll.3"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="NO MATCH"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[Count all]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[Count all]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[Count all]"
                      name="Count all" />
                    <outputColumn
                      refId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NO MATCH.Outputs[Union All Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\NOMATCH 2"
              componentClassID="DTSTransform.UnionAll.3"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="NOMATCH 2"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[Count all]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 1]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[Count all]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\NOMATCH 2.Outputs[Union All Output 1].Columns[Count all]"
                      name="Count all" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\OLE DB Source"
              componentClassID="DTSAdapter.OLEDBSource.3"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[sa].[iisLogs]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * 
  FROM [IIS].[weblogs].[iisLogs]
where csUriStem like '%XML.asp'</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.IIS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.IIS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogFilename]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LogFilename]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogFilename]"
                      name="LogFilename"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogRow]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LogRow]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogRow]"
                      name="LogRow"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[date]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[time]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[time]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[time]"
                      name="time"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[cIp]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cIp]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[cIp]"
                      name="cIp"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUsername]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUsername]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUsername]"
                      name="csUsername"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sSitename]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sSitename]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sSitename]"
                      name="sSitename"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sComputername]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sComputername]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sComputername]"
                      name="sComputername"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sIp]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sIp]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sIp]"
                      name="sIp"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sPort]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sPort]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sPort]"
                      name="sPort"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csMethod]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csMethod]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csMethod]"
                      name="csMethod"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUriStem]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUriStem]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUriStem]"
                      name="csUriStem"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUriQuery]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUriQuery]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUriQuery]"
                      name="csUriQuery"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scStatus]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scStatus]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scStatus]"
                      name="scStatus"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scSubstatus]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scSubstatus]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scSubstatus]"
                      name="scSubstatus"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scWin32Status]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scWin32Status]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scWin32Status]"
                      name="scWin32Status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scBytes]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scBytes]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[scBytes]"
                      name="scBytes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csBytes]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csBytes]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csBytes]"
                      name="csBytes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[timeTaken]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[timeTaken]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[timeTaken]"
                      name="timeTaken"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csVersion]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csVersion]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csVersion]"
                      name="csVersion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csHost]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csHost]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csHost]"
                      name="csHost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUserAgent]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUserAgent]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUserAgent]"
                      name="csUserAgent"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csCookie]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csCookie]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csCookie]"
                      name="csCookie"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csReferer]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csReferer]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csReferer]"
                      name="csReferer"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sEvent]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sEvent]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sEvent]"
                      name="sEvent"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sProcessType]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sProcessType]"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sProcessType]"
                      name="sProcessType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sUserTime]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sUserTime]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sUserTime]"
                      name="sUserTime"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sKernelTime]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sKernelTime]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sKernelTime]"
                      name="sKernelTime"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sPageFaults]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sPageFaults]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sPageFaults]"
                      name="sPageFaults"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sTotalProcs]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sTotalProcs]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sTotalProcs]"
                      name="sTotalProcs"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sActiveProcs]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sActiveProcs]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sActiveProcs]"
                      name="sActiveProcs"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sStoppedProcs]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sStoppedProcs]"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[sStoppedProcs]"
                      name="sStoppedProcs"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LogFilename]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="LogFilename" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LogRow]"
                      dataType="i4"
                      name="LogRow" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[date]"
                      dataType="dbTimeStamp"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[time]"
                      dataType="dbTimeStamp"
                      name="time" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cIp]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="cIp" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUsername]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csUsername" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sSitename]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="sSitename" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sComputername]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="sComputername" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sIp]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="sIp" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sPort]"
                      dataType="i4"
                      name="sPort" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csMethod]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csMethod" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUriStem]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csUriStem" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUriQuery]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csUriQuery" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scStatus]"
                      dataType="i4"
                      name="scStatus" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scSubstatus]"
                      dataType="i4"
                      name="scSubstatus" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scWin32Status]"
                      dataType="i4"
                      name="scWin32Status" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[scBytes]"
                      dataType="i4"
                      name="scBytes" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csBytes]"
                      dataType="i4"
                      name="csBytes" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[timeTaken]"
                      dataType="i4"
                      name="timeTaken" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csVersion]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csVersion" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csHost]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csHost" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csUserAgent]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csUserAgent" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csCookie]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csCookie" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[csReferer]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="csReferer" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sEvent]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="sEvent" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sProcessType]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="sProcessType" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sUserTime]"
                      dataType="r4"
                      name="sUserTime" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sKernelTime]"
                      dataType="r4"
                      name="sKernelTime" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sPageFaults]"
                      dataType="i4"
                      name="sPageFaults" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sTotalProcs]"
                      dataType="i4"
                      name="sTotalProcs" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sActiveProcs]"
                      dataType="i4"
                      name="sActiveProcs" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sStoppedProcs]"
                      dataType="i4"
                      name="sStoppedProcs" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LogFilename]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LogFilename]"
                      name="LogFilename" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LogRow]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LogRow]"
                      name="LogRow" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[date]"
                      name="date" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[time]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[time]"
                      name="time" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cIp]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cIp]"
                      name="cIp" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUsername]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUsername]"
                      name="csUsername" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sSitename]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sSitename]"
                      name="sSitename" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sComputername]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sComputername]"
                      name="sComputername" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sIp]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sIp]"
                      name="sIp" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sPort]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sPort]"
                      name="sPort" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csMethod]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csMethod]"
                      name="csMethod" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUriStem]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUriStem]"
                      name="csUriStem" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUriQuery]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUriQuery]"
                      name="csUriQuery" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scStatus]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scStatus]"
                      name="scStatus" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scSubstatus]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scSubstatus]"
                      name="scSubstatus" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scWin32Status]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scWin32Status]"
                      name="scWin32Status" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scBytes]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[scBytes]"
                      name="scBytes" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csBytes]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csBytes]"
                      name="csBytes" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[timeTaken]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[timeTaken]"
                      name="timeTaken" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csVersion]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csVersion]"
                      name="csVersion" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csHost]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csHost]"
                      name="csHost" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUserAgent]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csUserAgent]"
                      name="csUserAgent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csCookie]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csCookie]"
                      name="csCookie" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csReferer]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[csReferer]"
                      name="csReferer" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sEvent]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sEvent]"
                      name="sEvent" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sProcessType]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sProcessType]"
                      name="sProcessType" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sUserTime]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sUserTime]"
                      name="sUserTime" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sKernelTime]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sKernelTime]"
                      name="sKernelTime" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sPageFaults]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sPageFaults]"
                      name="sPageFaults" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sTotalProcs]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sTotalProcs]"
                      name="sTotalProcs" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sActiveProcs]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sActiveProcs]"
                      name="sActiveProcs" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sStoppedProcs]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sStoppedProcs]"
                      name="sStoppedProcs" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        string DaTable = "DAILY_STRUCT_CAP";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace>
    <AssemblyName>SC_588c729c63fe4affbf28412d351b7cef</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
LAgCGSgtAAAKKnLrAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLrAABwcy4AAAp6JgIb
AygsAAAKKloDLAgCGygtAAAKKnLrAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAKKnLrAABw
cy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLrAABwcy4AAAp6OgIeA4wgAAABKCwAAAoqWgMs
CAIeKC0AAAoqcusAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLrAABwcy4A
AAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8yAAAKbzMA
AApyiAEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioAABMwAgAtAAAAAwAAEX4J
AAAELSBytgEAcNAIAAACKDcAAApvOAAACnM5AAAKCgaACQAABH4JAAAEKhp+CgAABCoeAoAKAAAE
Khp+CwAABCouc0AAAAaACwAABCoeAig8AAAKKgAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
KAIAACNVUwDAGgAAEAAAACNHVUlEAAAA0BoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
zwcKAGYIzwcKAIEIzwcKAJwIzwcKALUIzwcKAO4IzggKAA4JzggKAFAJIgEKAFcJIgEGAJwJ2wAW
APAJRAIWAA4K+wkWABgKOAIWAFoKRAIWAIIK+wkKANQKIgEKAO4KIgEKAPQKIgEeAEgLHwseAHcL
HwseALoLHwsKABcMBAwKADQMIgEKADkMIgEKAF0MzwcOAIkMcwwOAKIMcwwKALcMzggAAAAAAQAA
AAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAUACQABABAASwAAAAkABwANAAEAEABYAAAA
CQAHACAAAQAQAGYAAAANAAcAOAABABAAcgAAAA0ACAA6AAAAEAB8AIYADQAJADsAAAEQALUAhgAR
AAsAPwAGAGYAEwAGAHIAFwAGAFgAHwABAGMBIwABACoCQgABAGgCRQABAN8FgwABAN8FgwARAKIG
lwARAM8GmwARABMHuQBQIAAAAACGGF0BGwABAHAgAAAAAMYAsAEmAAEAyyAAAAAAxgG9ARsABQDN
IAAAAACBAMsBGwAFAOwgAAAAAMYA3wEwAAUANSEAAAAAxgHrARsACQA3IQAAAADGAf8BPAAJAEoh
AAAAAMYBEwI8AAoATCEAAAAAxgBzAhsACwB8IQAAAADGAH4CGwALAJwhAAAAAMYAEwI8AAsAkyMA
AAAAhhhdARsADACbIwAAAACGGF0BSQAMAKYjAAAAAIYIigJTAA8AuyMAAAAAhgiTAlcADwDEIwAA
AACGCKMCUwAPANkjAAAAAIYIqgJXAA8A4iMAAAAAhgi4AlMADwD3IwAAAACGCMECVwAPAAAkAAAA
AIYI0QJTAA8AFSQAAAAAhgjcAlcADwAeJAAAAACGCO4CUwAPADMkAAAAAIYI+AJXAA8APCQAAAAA
hggJA1MADwBRJAAAAACGCBgDVwAPAFokAAAAAIYILgNTAA8AbyQAAAAAhghHA1cADwB4JAAAAACG
CGcDWwAPAI0kAAAAAIYIdANXAA8AliQAAAAAhgCIA1cADwCeJAAAAACGAJADVwAPAKYkAAAAAIYY
XQFJAA8AsSQAAAAAhghaBGsAEgC7JAAAAACGCGMEcAATANIkAAAAAIYIcwRrABQA3CQAAAAAhgh6
BHAAFQDzJAAAAACGCIgEawAWAP0kAAAAAIYIkQRwABcAFCUAAAAAhgihBGsAGAAeJQAAAACGCKwE
cAAZADUlAAAAAIYIvgRrABoAPyUAAAAAhgjIBHAAGwBWJQAAAACGCNkEawAcAGAlAAAAAIYI6ARw
AB0AdyUAAAAAhgj+BGsAHgCBJQAAAACGCBcFcAAfAJglAAAAAIYINwVrACAAoiUAAAAAhghABXAA
IQC5JQAAAACGCFAFdQAiAMglAAAAAIYIWgVwACMA3yUAAAAAhghrBXoAJADvJQAAAACGCHgFcAAl
AAcmAAAAAIYAjAUbACYADyYAAAAAhgCTBRsAJgAXJgAAAACGAJADVwAmAB8mAAAAAIYYXQGHACYA
LiYAAAAAhghTBo0AJwBPJgAAAACGGF0BhwAnAF4mAAAAAIMYXQEbACgAaCYAAAAAkwjfBp8AKACh
JgAAAACTCPMGpAAoAKgmAAAAAJMI/wapACgAsCYAAAAAlggjB70AKQDDJgAAAACGGF0BGwApALcm
AAAAAJEY0gyCASkAAAABADcHAAACAD8HAAADAEkHAAAEAFAHAAABAFoHAAACAGIHAAADAGwHAAAE
AFAHAAABAEkHAAABAHQHAAABAHQHAAABAEkHAAACAHgHAAADAFAHAAABAEkHAAACAHgHAAADAFAH
AAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAAB
AIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwH
AAABAIwHAAABAJIHAAABAJIHAAABAIwHWQBdAWsAYQBdAWsAaQBdAWsAcQBdAWsAeQBdAWsAgQBd
AWsAiQBdAWsAkQBdAWsAmQBdAWsAoQBdAWsAqQBdAXUAsQBdARsACQBdARsAuQBoCccACQBvCc4A
KQCACVcACQCQCdQAyQBdARsACQBzAhsAQQDDCeQACQB+AhsAQQDVCekAGQDnCVMA0QBdARsA2QAk
Cu4AuQA0CvQA2QA7CmsA0QBLCvoA0QBoCgABuQB2CgUB8QCPCgsBuQCYClMAuQA0ChAB8QCdChsA
8QCjClcAEQBdAUkAEQBJByYBEQB4ByoBKQCoCi4BEQCyCjMBKQC5CjgBEQCIA1cAEQCQA1cAEQDD
Cj0BEQDMCnUA+QBdAWsAEQCMBRsAEQCTBRsAGQBdARsACQBhC0MBEQGaC0kBGQHTC08BIQHuC40A
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALYUYEoAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQx
MmQzNTFiN2NlZi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNTg4YzcyOWM2M2ZlNGFmZmJmMjg0
MTJkMzUxYjdjZWYAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAAhRABBAEkA
TABZAF8AUwBUAFIAVQBDAFQAXwBDAEEAUAAAAQBrIABzAGUAbABlAGMAdAAgAGMAbwBtAHAAbwBu
AGUAbgB0AF8AZABlAHMAYwByAGkAcAB0AGkAbwBuACwAIABwAGEAcgBlAG4AdABfAGMAbwBtAHAA
bwBuAGUAbgB0ACAAZgByAG8AbQAgAAAnIAB3AGgAZQByAGUAIABjAG8AbQBwAG8AbgBlAG4AdAAg
AD0AJwABBScAIAABCSAALQA+ACAAAYCbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABj
AGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcA
bgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABl
AGEAZAAuAAAtQwBvAG4AbgBlAGMAdABpAG8AbgAgAFQAcgBlAGUAIABTAHQAcgB1AGMAdAAAcVMA
QwBfADUAOAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAx
AGIANwBjAGUAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAWUl+
bGPpx061eSyybsNzQQAIiYRdzYCAzJEIt3pcVhk04IkDBhIYAwYSHAMgAAEDBhIUAgYICSAEAQgO
EhUSGQsgBAEIHQgdEhUSGQUgAQESEAIGHAMGEh0JIAMBEhUdCBIZAyAADgMgAAIDIAALAygADgMo
AAIDKAALBCABAQ4EIAEBAgQgAQEIBCABAQsDKAAIAwYSBQUgAQESBQQgABIhBCgAEiEDBhIlAwYS
KQQAABIlBAAAEikFAAEBEikECAASJQQIABIpAwYSJAQAABIkBAgAEiQGIAICDhFhBSABHQgIBgAC
CBIZDgMHAQgEAQAAAAQgARwcBCABARwFIAEBEXEFAAEOHQ4FIAEBEh0EIAASdQUAAgIODgQgARwI
BgADDg4ODg4HCA4IDg4SaRJ1HQ4dDgMGEhUDBh0IBCABDggEIAECCAQgAQsIBSACAQgcBSAAEoCJ
BSAAEoCNBiABEoCRDggAARKAmRGAnQUgABKAoQcgAgEOEoChBAcBEiUGIAEBEYCpCAEAAgAAAAAA
AwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2Nl
ZgAABQEAAAAAFgEAEU5hdGlvbmFsIFRyZWFzdXJ5AAAnAQAiQ29weXJpZ2h0IEAgTmF0aW9uYWwg
VHJlYXN1cnkgMjAxNAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAeRE
AAAAAAAAAAAAAP5EAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwRAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAYEq2FAAAAQBgSrYUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwAw
ADIALgAxADkAMAA0ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3
AGMAZQBmAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
NQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3
AGMAZQBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADAA
MgAuADEAOQAwADQAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADAAMgAuADEAOQAwADQAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAEDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_588c729c63fe4affbf28412d351b7cef</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "FINANCIALS_RESP_SEG";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_B8DAEFC178E745C08FEA58103A6B505C</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_B8DAEFC178E745C08FEA58103A6B505C.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALUU+0kAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19COERBRUZDMTc4RTc0NUMwOEZFQTU4
MTAzQTZCNTA1Qy5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfQjhEQUVGQzE3OEU3NDVDMDhGRUE1
ODEwM0E2QjUwNUMAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAIh8K0IVuaJGogrHaKrG7jQACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA+0m1FAAAAQD7SbUUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwAw
ADEALgAxADgAOQAzADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
QgA4AEQAQQBFAEYAQwAxADcAOABFADcANAA1AEMAMAA4AEYARQBBADUAOAAxADAAMwBBADYAQgA1
ADAANQBDAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
QgA4AEQAQQBFAEYAQwAxADcAOABFADcANAA1AEMAMAA4AEYARQBBADUAOAAxADAAMwBBADYAQgA1
ADAANQBDAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADAA
MQAuADEAOAA5ADMAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADAAMQAuADEAOAA5ADMAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b8daefc178e745c08fea58103a6b505c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "FINANCIALS_RESP_SEG";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_967D68F9CF8145BC8D160FA304F4ADE6</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_967D68F9CF8145BC8D160FA304F4ADE6.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALEU008AAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ185NjdENjhGOUNGODE0NUJDOEQxNjBG
QTMwNEY0QURFNi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfOTY3RDY4RjlDRjgxNDVCQzhEMTYw
RkEzMDRGNEFERTYAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAK3QdN2NzzdKpuQysZ82lY4ACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA00+xFAAAAQDTT7EUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMgA5
ADcALgAyADAANAAzADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
OQA2ADcARAA2ADgARgA5AEMARgA4ADEANAA1AEIAQwA4AEQAMQA2ADAARgBBADMAMAA0AEYANABB
AEQARQA2AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
OQA2ADcARAA2ADgARgA5AEMARgA4ADEANAA1AEIAQwA4AEQAMQA2ADAARgBBADMAMAA0AEYANABB
AEQARQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAyADkA
NwAuADIAMAA0ADMANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAyADkANwAuADIAMAA0ADMANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_967d68f9cf8145bc8d160fa304f4ade6</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "FINANCIALS_RESP_SEG";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_ED80C77A259A45C0824EFCAD3F242442</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ED80C77A259A45C0824EFCAD3F242442.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALEU708AAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19FRDgwQzc3QTI1OUE0NUMwODI0RUZD
QUQzRjI0MjQ0Mi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfRUQ4MEM3N0EyNTlBNDVDMDgyNEVG
Q0FEM0YyNDI0NDIAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAANWrhyp+DSdOh2MfHSTqhhUACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA70+xFAAAAQDvT7EUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMgA5
ADcALgAyADAANAA2ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
RQBEADgAMABDADcANwBBADIANQA5AEEANAA1AEMAMAA4ADIANABFAEYAQwBBAEQAMwBGADIANAAy
ADQANAAyAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
RQBEADgAMABDADcANwBBADIANQA5AEEANAA1AEMAMAA4ADIANABFAEYAQwBBAEQAMwBGADIANAAy
ADQANAAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAyADkA
NwAuADIAMAA0ADYAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAyADkANwAuADIAMAA0ADYAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_ed80c77a259a45c0824efcad3f242442</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "FINANCIALS_RESP_SEG";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_A10D4DD5E82440EEA13A4DFF967E3778</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_A10D4DD5E82440EEA13A4DFF967E3778.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
zwcKAGYIzwcKAIEIzwcKAJwIzwcKALUIzwcKAO4IzggKAA4JzggKAFAJIgEKAFcJIgEGAJwJ2wAW
APAJRAIWAA4K+wkWABgKOAIWAFoKRAIWAIIK+wkKANQKIgEKAO4KIgEKAPQKIgEeAEgLHwseAHcL
HwseALoLHwsKABcMBAwKADQMIgEKADkMIgEKAF0MzwcOAIkMcwwOAKIMcwwKALcMzggAAAAAAQAA
AAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAUACQABABAASwAAAAkABwANAAEAEABYAAAA
CQAHACAAAQAQAGYAAAANAAcAOAABABAAcgAAAA0ACAA6AAAAEAB8AIYADQAJADsAAAEQALUAhgAR
AAsAPwAGAGYAEwAGAHIAFwAGAFgAHwABAGMBIwABACoCQgABAGgCRQABAN8FgwABAN8FgwARAKIG
lwARAM8GmwARABMHuQBQIAAAAACGGF0BGwABAHAgAAAAAMYAsAEmAAEAyyAAAAAAxgG9ARsABQDN
IAAAAACBAMsBGwAFAOwgAAAAAMYA3wEwAAUANSEAAAAAxgHrARsACQA3IQAAAADGAf8BPAAJAEoh
AAAAAMYBEwI8AAoATCEAAAAAxgBzAhsACwB8IQAAAADGAH4CGwALAJwhAAAAAMYAEwI8AAsAmSMA
AAAAhhhdARsADAChIwAAAACGGF0BSQAMAKwjAAAAAIYIigJTAA8AwSMAAAAAhgiTAlcADwDKIwAA
AACGCKMCUwAPAN8jAAAAAIYIqgJXAA8A6CMAAAAAhgi4AlMADwD9IwAAAACGCMECVwAPAAYkAAAA
AIYI0QJTAA8AGyQAAAAAhgjcAlcADwAkJAAAAACGCO4CUwAPADkkAAAAAIYI+AJXAA8AQiQAAAAA
hggJA1MADwBXJAAAAACGCBgDVwAPAGAkAAAAAIYILgNTAA8AdSQAAAAAhghHA1cADwB+JAAAAACG
CGcDWwAPAJMkAAAAAIYIdANXAA8AnCQAAAAAhgCIA1cADwCkJAAAAACGAJADVwAPAKwkAAAAAIYY
XQFJAA8AtyQAAAAAhghaBGsAEgDBJAAAAACGCGMEcAATANgkAAAAAIYIcwRrABQA4iQAAAAAhgh6
BHAAFQD5JAAAAACGCIgEawAWAAMlAAAAAIYIkQRwABcAGiUAAAAAhgihBGsAGAAkJQAAAACGCKwE
cAAZADslAAAAAIYIvgRrABoARSUAAAAAhgjIBHAAGwBcJQAAAACGCNkEawAcAGYlAAAAAIYI6ARw
AB0AfSUAAAAAhgj+BGsAHgCHJQAAAACGCBcFcAAfAJ4lAAAAAIYINwVrACAAqCUAAAAAhghABXAA
IQC/JQAAAACGCFAFdQAiAM4lAAAAAIYIWgVwACMA5SUAAAAAhghrBXoAJAD1JQAAAACGCHgFcAAl
AA0mAAAAAIYAjAUbACYAFSYAAAAAhgCTBRsAJgAdJgAAAACGAJADVwAmACUmAAAAAIYYXQGHACYA
NCYAAAAAhghTBo0AJwBVJgAAAACGGF0BhwAnAGQmAAAAAIMYXQEbACgAbCYAAAAAkwjfBp8AKACl
JgAAAACTCPMGpAAoAKwmAAAAAJMI/wapACgAtCYAAAAAlggjB70AKQDHJgAAAACGGF0BGwApALsm
AAAAAJEY0gyCASkAAAABADcHAAACAD8HAAADAEkHAAAEAFAHAAABAFoHAAACAGIHAAADAGwHAAAE
AFAHAAABAEkHAAABAHQHAAABAHQHAAABAEkHAAACAHgHAAADAFAHAAABAEkHAAACAHgHAAADAFAH
AAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAAB
AIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwH
AAABAIwHAAABAJIHAAABAJIHAAABAIwHWQBdAWsAYQBdAWsAaQBdAWsAcQBdAWsAeQBdAWsAgQBd
AWsAiQBdAWsAkQBdAWsAmQBdAWsAoQBdAWsAqQBdAXUAsQBdARsACQBdARsAuQBoCccACQBvCc4A
KQCACVcACQCQCdQAyQBdARsACQBzAhsAQQDDCeQACQB+AhsAQQDVCekAGQDnCVMA0QBdARsA2QAk
Cu4AuQA0CvQA2QA7CmsA0QBLCvoA0QBoCgABuQB2CgUB8QCPCgsBuQCYClMAuQA0ChAB8QCdChsA
8QCjClcAEQBdAUkAEQBJByYBEQB4ByoBKQCoCi4BEQCyCjMBKQC5CjgBEQCIA1cAEQCQA1cAEQDD
Cj0BEQDMCnUA+QBdAWsAEQCMBRsAEQCTBRsAGQBdARsACQBhC0MBEQGaC0kBGQHTC08BIQHuC40A
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALEUB1AAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19BMTBENERENUU4MjQ0MEVFQTEzQTRE
RkY5NjdFMzc3OC5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfQTEwRDRERDVFODI0NDBFRUExM0E0
REZGOTY3RTM3NzgAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAANzyOOwMeMlKjWBPB1EIz48ACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAB1CxFAAAAQAHULEUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMgA5
ADcALgAyADAANAA4ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
QQAxADAARAA0AEQARAA1AEUAOAAyADQANAAwAEUARQBBADEAMwBBADQARABGAEYAOQA2ADcARQAz
ADcANwA4AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
QQAxADAARAA0AEQARAA1AEUAOAAyADQANAAwAEUARQBBADEAMwBBADQARABGAEYAOQA2ADcARQAz
ADcANwA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAyADkA
NwAuADIAMAA0ADgANwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAyADkANwAuADIAMAA0ADgANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a10d4dd5e82440eea13a4dff967e3778</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_702382B2515C4F3792508400ADC7558A</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_702382B2515C4F3792508400ADC7558A.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALUUmFEAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ183MDIzODJCMjUxNUM0RjM3OTI1MDg0
MDBBREM3NTU4QS5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNzAyMzgyQjI1MTVDNEYzNzkyNTA4
NDAwQURDNzU1OEEAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAIaOYo3i1BxEi1ZmVXrOkqQACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAmFG1FAAAAQCYUbUUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwAw
ADEALgAyADAAOAA4ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NwAwADIAMwA4ADIAQgAyADUAMQA1AEMANABGADMANwA5ADIANQAwADgANAAwADAAQQBEAEMANwA1
ADUAOABBAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
NwAwADIAMwA4ADIAQgAyADUAMQA1AEMANABGADMANwA5ADIANQAwADgANAAwADAAQQBEAEMANwA1
ADUAOABBAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADAA
MQAuADIAMAA4ADgAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADAAMQAuADIAMAA4ADgAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_702382b2515c4f3792508400adc7558a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_C52AC2F4880346EBA8F132544A9E1809</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_C52AC2F4880346EBA8F132544A9E1809.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALUU52IAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19DNTJBQzJGNDg4MDM0NkVCQThGMTMy
NTQ0QTlFMTgwOS5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfQzUyQUMyRjQ4ODAzNDZFQkE4RjEz
MjU0NEE5RTE4MDkAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAGLw2Y6lJwRJh0kS7XYQ7JUACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA52K1FAAAAQDnYrUUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwAw
ADEALgAyADUAMwAxADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
QwA1ADIAQQBDADIARgA0ADgAOAAwADMANAA2AEUAQgBBADgARgAxADMAMgA1ADQANABBADkARQAx
ADgAMAA5AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
QwA1ADIAQQBDADIARgA0ADgAOAAwADMANAA2AEUAQgBBADgARgAxADMAMgA1ADQANABBADkARQAx
ADgAMAA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADAA
MQAuADIANQAzADEAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADAAMQAuADIANQAzADEAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c52ac2f4880346eba8f132544a9e1809</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_3AB1B44CBA354E898A294C78AE259C36</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3AB1B44CBA354E898A294C78AE259C36.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALUUdmQAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ18zQUIxQjQ0Q0JBMzU0RTg5OEEyOTRD
NzhBRTI1OUMzNi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfM0FCMUI0NENCQTM1NEU4OThBMjk0
Qzc4QUUyNTlDMzYAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAPsdeDl4wupBv4lIpY7YdUQACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAdmS1FAAAAQB2ZLUUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwAw
ADEALgAyADUANwAxADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
MwBBAEIAMQBCADQANABDAEIAQQAzADUANABFADgAOQA4AEEAMgA5ADQAQwA3ADgAQQBFADIANQA5
AEMAMwA2AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
MwBBAEIAMQBCADQANABDAEIAQQAzADUANABFADgAOQA4AEEAMgA5ADQAQwA3ADgAQQBFADIANQA5
AEMAMwA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADAA
MQAuADIANQA3ADEAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADAAMQAuADIANQA3ADEAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_3ab1b44cba354e898a294c78ae259c36</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_374B175581624A92BD410CAA70EBD86E</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_374B175581624A92BD410CAA70EBD86E.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAALUUJWYAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ18zNzRCMTc1NTgxNjI0QTkyQkQ0MTBD
QUE3MEVCRDg2RS5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfMzc0QjE3NTU4MTYyNEE5MkJENDEw
Q0FBNzBFQkQ4NkUAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAGvhN+S7ayRCkjX64N2y1+EACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAJWa1FAAAAQAlZrUUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwAw
ADEALgAyADYAMQA0ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
MwA3ADQAQgAxADcANQA1ADgAMQA2ADIANABBADkAMgBCAEQANAAxADAAQwBBAEEANwAwAEUAQgBE
ADgANgBFAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
MwA3ADQAQgAxADcANQA1ADgAMQA2ADIANABBADkAMgBCAEQANAAxADAAQwBBAEEANwAwAEUAQgBE
ADgANgBFAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADAA
MQAuADIANgAxADQAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADAAMQAuADIANgAxADQAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_374b175581624a92bd410caa70ebd86e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 1 1 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "LABOUR_OCT2013";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_1740A8675A2540B29D7683339ADD1417</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_1740A8675A2540B29D7683339ADD1417.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAAOgU0VEAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ18xNzQwQTg2NzVBMjU0MEIyOUQ3Njgz
MzM5QUREMTQxNy5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfMTc0MEE4Njc1QTI1NDBCMjlENzY4
MzMzOUFERDE0MTcAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAJc7JLEDB/BPmaJMwrVe2qkACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA0VHoFAAAAQDRUegUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAMwA1
ADIALgAyADAAOQA0ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
MQA3ADQAMABBADgANgA3ADUAQQAyADUANAAwAEIAMgA5AEQANwA2ADgAMwAzADMAOQBBAEQARAAx
ADQAMQA3AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
MQA3ADQAMABBADgANgA3ADUAQQAyADUANAAwAEIAMgA5AEQANwA2ADgAMwAzADMAOQBBAEQARAAx
ADQAMQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAzADUA
MgAuADIAMAA5ADQANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQAzADUAMgAuADIAMAA5ADQANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_1740a8675a2540b29d7683339add1417</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 1 1 2"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_C528208713474FFA8C3279F94FE25999</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_C528208713474FFA8C3279F94FE25999.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABU2mFgAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAA7kQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJxEAABPAAAAAGAAAHAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9CQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHAEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
RAAAAAAAAEgAAAACAAUAiCcAABQdAAABAAAAAAAAANAmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnM4AAAGfQEAAAQCAnM6AAAGfQIAAAQqAzAE
AE8AAAAAAAAABHIBAABwGm8OAAAKLBUCBQIDKA8AAAoOBHMNAAAGbwcAAAYFbxAAAAosIwICewQA
AAQXWH0EAAAEAnsEAAAEFzMMAm8DAAAGAigEAAAGKgYqbgJ7AwAABCwSAnsDAAAEbzYAAAYCFH0D
AAAEKgAAABMwBQA9AAAAAQAAERYKKy4EBpQOBHIRAABwKBEAAAozGQIFBpoCBAaUKA8AAAoOBHMg
AAAGfQMAAAQGF1gKBgMyzgJvBgAABioGKkorBwIDbwgAAAYDbx4AAAYt8SoGKr4CKBMAAAoCAnsB
AAAEbzkAAAYUbxQAAAp9BQAABAICewUAAAR0BwAAAX0GAAAEKnYCKBUAAAoCewEAAARvOQAABgJ7
BQAABG8WAAAKKgAAEzAEAPEBAAACAAARA28WAAAGbxcAAAoKFgtyIwAAcAxyIwAAcA0DbxAAAAZv
FwAACg1zGAAAChMEEQQXbxkAAAoRBBuNFwAAARMGEQYWciUAAHCiEQYXBqIRBhhykQAAcKIRBhkJ
ohEGGnK5AABwohEGKBoAAApvGwAAChEEAnsGAAAEbxwAAAoRBG8dAAAKEwU4nQAAAAhyIwAAcCge
AAAKLBURBRZvHwAACm8XAAAKbyAAAAoMKx4RBRZvHwAACm8XAAAKbyAAAApyvwAAcAgoIQAACgwH
F1gLEQUXbx8AAApvFwAACg0RBBuNFwAAARMHEQcWciUAAHCiEQcXBqIRBxhykQAAcKIRBxkJohEH
GnK5AABwohEHKBoAAApvGwAAChEFbyIAAAoRBG8dAAAKEwURBW8jAAAKOlf///8RBW8iAAAKAnsD
AAAEbzUAAAYCewMAAAQDbxoAAAZvLQAABgJ7AwAABANvGAAABm8gAAAKbxcAAApvKwAABgJ7AwAA
BANvDgAABm8hAAAGAnsDAAAEA28WAAAGbykAAAYCewMAAAQDbxAAAAZvIwAABgJ7AwAABANvEgAA
Bm8lAAAGAnsDAAAEA28UAAAGbycAAAYCewMAAAQIby8AAAYCewMAAAQHbzEAAAYCewMAAAQDbxwA
AAZvMwAABioeAigBAAAGKioCAwQFKCQAAAoqUgJ7JQAACgJ7JgAAChaUbycAAAoqIgIWKCgAAAoq
UgJ7JQAACgJ7JgAACheUbycAAAoqIgIXKCgAAAoqUgJ7JQAACgJ7JgAAChiUbycAAAoqIgIYKCgA
AAoqUgJ7JQAACgJ7JgAAChmUbycAAAoqIgIZKCgAAAoqUgJ7JQAACgJ7JgAAChqUbycAAAoqIgIa
KCgAAAoqUgJ7JQAACgJ7JgAAChuUbycAAAoqIgIbKCgAAAoqUgJ7JQAACgJ7JgAAChyUbycAAAoq
IgIcKCgAAAoqUgJ7JQAACgJ7JgAACh2UbykAAAoqIgIdKCgAAAoqHgIoKgAACioeAigrAAAKKioC
AwQFKCQAAAoqJgIWAygsAAAKKloDLAgCFigtAAAKKnLJAABwcy4AAAp6JgIXAygsAAAKKloDLAgC
FygtAAAKKnLJAABwcy4AAAp6JgIYAygsAAAKKloDLAgCGCgtAAAKKnLJAABwcy4AAAp6JgIZAygs
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAAGYY2koAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19DNTI4MjA4NzEzNDc0RkZBOEMzMjc5
Rjk0RkUyNTk5OS5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfQzUyODIwODcxMzQ3NEZGQThDMzI3
OUY5NEZFMjU5OTkAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAF/bhlcdqxlBr/trRoU7wb4ACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA2kpmGAAAAQDaSmYYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0
ADYALgAxADkAMQA2ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
QwA1ADIAOAAyADAAOAA3ADEAMwA0ADcANABGAEYAQQA4AEMAMwAyADcAOQBGADkANABGAEUAMgA1
ADkAOQA5AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
QwA1ADIAOAAyADAAOAA3ADEAMwA0ADcANABGAEYAQQA4AEMAMwAyADcAOQBGADkANABGAEUAMgA1
ADkAOQA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADQA
NgAuADEAOQAxADYAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAyADQANgAuADEAOQAxADYAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c528208713474ffa8c3279f94fe25999</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c9b99557b160e25aebc1bb56412df7a0d5866ff7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 1 1 2 1"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_C528208713474FFA8C3279F94FE25999</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_C528208713474FFA8C3279F94FE25999.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAAGYY2koAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19DNTI4MjA4NzEzNDc0RkZBOEMzMjc5
Rjk0RkUyNTk5OS5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfQzUyODIwODcxMzQ3NEZGQThDMzI3
OUY5NEZFMjU5OTkAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAF/bhlcdqxlBr/trRoU7wb4ACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA2kpmGAAAAQDaSmYYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0
ADYALgAxADkAMQA2ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
QwA1ADIAOAAyADAAOAA3ADEAMwA0ADcANABGAEYAQQA4AEMAMwAyADcAOQBGADkANABGAEUAMgA1
ADkAOQA5AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
QwA1ADIAOAAyADAAOAA3ADEAMwA0ADcANABGAEYAQQA4AEMAMwAyADcAOQBGADkANABGAEUAMgA1
ADkAOQA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADQA
NgAuADEAOQAxADYAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAyADQANgAuADEAOQAxADYAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c528208713474ffa8c3279f94fe25999</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c9b99557b160e25aebc1bb56412df7a0d5866ff7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 1 2"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_B1B7155C752746ADB58FAB1C1C7E971F</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_B1B7155C752746ADB58FAB1C1C7E971F.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAAGYY0EoAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ19CMUI3MTU1Qzc1Mjc0NkFEQjU4RkFC
MUMxQzdFOTcxRi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfQjFCNzE1NUM3NTI3NDZBREI1OEZB
QjFDMUM3RTk3MUYAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAFsai/+IuaBNsd8oJ63hpR8ACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA0EpmGAAAAQDQSmYYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0
ADYALgAxADkAMQA1ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
QgAxAEIANwAxADUANQBDADcANQAyADcANAA2AEEARABCADUAOABGAEEAQgAxAEMAMQBDADcARQA5
ADcAMQBGAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
QgAxAEIANwAxADUANQBDADcANQAyADcANAA2AEEARABCADUAOABGAEEAQgAxAEMAMQBDADcARQA5
ADcAMQBGAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADQA
NgAuADEAOQAxADUAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAyADQANgAuADEAOQAxADUAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b1b7155c752746adb58fab1c1c7e971f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c9b99557b160e25aebc1bb56412df7a0d5866ff7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 1 2"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_79EB4BE5B6FD4A9C9BC11E4D8D66D947</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_79EB4BE5B6FD4A9C9BC11E4D8D66D947.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
zwcKAGYIzwcKAIEIzwcKAJwIzwcKALUIzwcKAO4IzggKAA4JzggKAFAJIgEKAFcJIgEGAJwJ2wAW
APAJRAIWAA4K+wkWABgKOAIWAFoKRAIWAIIK+wkKANQKIgEKAO4KIgEKAPQKIgEeAEgLHwseAHcL
HwseALoLHwsKABcMBAwKADQMIgEKADkMIgEKAF0MzwcOAIkMcwwOAKIMcwwKALcMzggAAAAAAQAA
AAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAUACQABABAASwAAAAkABwANAAEAEABYAAAA
CQAHACAAAQAQAGYAAAANAAcAOAABABAAcgAAAA0ACAA6AAAAEAB8AIYADQAJADsAAAEQALUAhgAR
AAsAPwAGAGYAEwAGAHIAFwAGAFgAHwABAGMBIwABACoCQgABAGgCRQABAN8FgwABAN8FgwARAKIG
lwARAM8GmwARABMHuQBQIAAAAACGGF0BGwABAHAgAAAAAMYAsAEmAAEAyyAAAAAAxgG9ARsABQDN
IAAAAACBAMsBGwAFAOwgAAAAAMYA3wEwAAUANSEAAAAAxgHrARsACQA3IQAAAADGAf8BPAAJAEoh
AAAAAMYBEwI8AAoATCEAAAAAxgBzAhsACwB8IQAAAADGAH4CGwALAJwhAAAAAMYAEwI8AAsAmSMA
AAAAhhhdARsADAChIwAAAACGGF0BSQAMAKwjAAAAAIYIigJTAA8AwSMAAAAAhgiTAlcADwDKIwAA
AACGCKMCUwAPAN8jAAAAAIYIqgJXAA8A6CMAAAAAhgi4AlMADwD9IwAAAACGCMECVwAPAAYkAAAA
AIYI0QJTAA8AGyQAAAAAhgjcAlcADwAkJAAAAACGCO4CUwAPADkkAAAAAIYI+AJXAA8AQiQAAAAA
hggJA1MADwBXJAAAAACGCBgDVwAPAGAkAAAAAIYILgNTAA8AdSQAAAAAhghHA1cADwB+JAAAAACG
CGcDWwAPAJMkAAAAAIYIdANXAA8AnCQAAAAAhgCIA1cADwCkJAAAAACGAJADVwAPAKwkAAAAAIYY
XQFJAA8AtyQAAAAAhghaBGsAEgDBJAAAAACGCGMEcAATANgkAAAAAIYIcwRrABQA4iQAAAAAhgh6
BHAAFQD5JAAAAACGCIgEawAWAAMlAAAAAIYIkQRwABcAGiUAAAAAhgihBGsAGAAkJQAAAACGCKwE
cAAZADslAAAAAIYIvgRrABoARSUAAAAAhgjIBHAAGwBcJQAAAACGCNkEawAcAGYlAAAAAIYI6ARw
AB0AfSUAAAAAhgj+BGsAHgCHJQAAAACGCBcFcAAfAJ4lAAAAAIYINwVrACAAqCUAAAAAhghABXAA
IQC/JQAAAACGCFAFdQAiAM4lAAAAAIYIWgVwACMA5SUAAAAAhghrBXoAJAD1JQAAAACGCHgFcAAl
AA0mAAAAAIYAjAUbACYAFSYAAAAAhgCTBRsAJgAdJgAAAACGAJADVwAmACUmAAAAAIYYXQGHACYA
NCYAAAAAhghTBo0AJwBVJgAAAACGGF0BhwAnAGQmAAAAAIMYXQEbACgAbCYAAAAAkwjfBp8AKACl
JgAAAACTCPMGpAAoAKwmAAAAAJMI/wapACgAtCYAAAAAlggjB70AKQDHJgAAAACGGF0BGwApALsm
AAAAAJEY0gyCASkAAAABADcHAAACAD8HAAADAEkHAAAEAFAHAAABAFoHAAACAGIHAAADAGwHAAAE
AFAHAAABAEkHAAABAHQHAAABAHQHAAABAEkHAAACAHgHAAADAFAHAAABAEkHAAACAHgHAAADAFAH
AAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAAB
AIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwHAAABAIwH
AAABAIwHAAABAJIHAAABAJIHAAABAIwHWQBdAWsAYQBdAWsAaQBdAWsAcQBdAWsAeQBdAWsAgQBd
AWsAiQBdAWsAkQBdAWsAmQBdAWsAoQBdAWsAqQBdAXUAsQBdARsACQBdARsAuQBoCccACQBvCc4A
KQCACVcACQCQCdQAyQBdARsACQBzAhsAQQDDCeQACQB+AhsAQQDVCekAGQDnCVMA0QBdARsA2QAk
Cu4AuQA0CvQA2QA7CmsA0QBLCvoA0QBoCgABuQB2CgUB8QCPCgsBuQCYClMAuQA0ChAB8QCdChsA
8QCjClcAEQBdAUkAEQBJByYBEQB4ByoBKQCoCi4BEQCyCjMBKQC5CjgBEQCIA1cAEQCQA1cAEQDD
Cj0BEQDMCnUA+QBdAWsAEQCMBRsAEQCTBRsAGQBdARsACQBhC0MBEQGaC0kBGQHTC08BIQHuC40A
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAAGYYwkoAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ183OUVCNEJFNUI2RkQ0QTlDOUJDMTFF
NEQ4RDY2RDk0Ny5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNzlFQjRCRTVCNkZENEE5QzlCQzEx
RTREOEQ2NkQ5NDcAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAOvSVxqmKNREq5kiaK0BNQ0ACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAwkpmGAAAAQDCSmYYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0
ADYALgAxADkAMQAzADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NwA5AEUAQgA0AEIARQA1AEIANgBGAEQANABBADkAQwA5AEIAQwAxADEARQA0AEQAOABEADYANgBE
ADkANAA3AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
NwA5AEUAQgA0AEIARQA1AEIANgBGAEQANABBADkAQwA5AEIAQwAxADEARQA0AEQAOABEADYANgBE
ADkANAA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADQA
NgAuADEAOQAxADMAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAyADQANgAuADEAOQAxADMAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_79eb4be5b6fd4a9c9bc11e4d8d66d947</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c9b99557b160e25aebc1bb56412df7a0d5866ff7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 1 1 1 1 1 2"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        // USUALLY Corresponds to the dbase Variable
        string DaTable = Row.dbase.ToString();  // "HEADCOUNTS";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_6CE73F03EBA04517BFA555C6963D5015</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6CE73F03EBA04517BFA555C6963D5015.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAAKKloDLAgCGSgtAAAKKnLJAABwcy4AAAp6JgIaAygsAAAKKloDLAgCGigtAAAKKnLJAABwcy4A
AAp6JgIbAygsAAAKKloDLAgCGygtAAAKKnLJAABwcy4AAAp6JgIcAygsAAAKKloDLAgCHCgtAAAK
KnLJAABwcy4AAAp6JgIdAygsAAAKKloDLAgCHSgtAAAKKnLJAABwcy4AAAp6OgIeA4wgAAABKCwA
AAoqWgMsCAIeKC0AAAoqcskAAHBzLgAACno+Ah8JA4whAAABKCwAAAoqXgMsCQIfCSgtAAAKKnLJ
AABwcy4AAAp6HgIoLwAACioeAigwAAAKKh4CKCsAAAoqOgIoMQAACgIDfQcAAAQqggJ7BwAABG8y
AAAKbzMAAApyZgEAcG80AAAKbzUAAAoqOgIoMQAACgIDfQgAAAQqHgIoMQAACioTMAIALQAAAAMA
ABF+CQAABC0gcpQBAHDQCAAAAig3AAAKbzgAAApzOQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKA
CgAABCoafgsAAAQqLnNAAAAGgAsAAAQqHgIoPAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABALAAAjfgAAfAsAABwNAAAjU3RyaW5ncwAAAACYGAAA
CAIAACNVUwCgGgAAEAAAACNHVUlEAAAAsBoAAGQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+iUzABYAAAEAAAArAAAACQAAAAsAAABBAAAAKAAAADwAAAAPAAAAAwAAAAUAAAAoAAAAKQAAAAEA
AAAHAAAAAQAAAAAACgABAAAAAAAGAPwA2wAGAAwB2wAKACkBIgEOAEUBMAESAJMB2wAGAKIB2wAW
AFoCRAIaADoGEgYKAJIGgQYKAMMGrgYKALYHnAcKAOEHzwcKAPgHzwcKABUIzwcKADQIzwcKAE0I
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
KQFdARsAMQFLDFYBMQFmDF8BSQBdAWUBSQFdAXIBWQFdARsAIQBdARsALgAbAPcBLgBjAEUCLgAL
AIYBLgATAM4BLgAjAPcBLgArAP0BLgAzAM4BLgA7ABQCLgBDAPcBLgBbADwCYwCTAN8AAwGzAd8A
YQHbAd8AyQTTAXkB6QTTAXkB2wAXAW0BBAABAAUAEQAGACUACAAmAAkAKAAAAJwDXwAAAKEDYwAA
AK0DXwAAALADYwAAALoDXwAAAL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4D
YwAAABAEXwAAACUEYwAAAEEEZwAAAEoEYwAAAJwDXwAAAKEDYwAAAK0DXwAAALADYwAAALoDXwAA
AL8DYwAAAMsDXwAAANIDYwAAAOADXwAAAOYDYwAAAPMDXwAAAP4DYwAAABAEXwAAACUEYwAAAKIF
XwAAAKcFYwAAALMFfwAAALkFYwAAAMYFZwAAAM8FYwAAAGwGkgAAAJIGrwAAAAsHtAAAAC8HwgAC
AA4AAwACAA8ABQACABAABwACABEACQACABIACwACABMADQACABQADwACABUAEQACABYAEwACABcA
FQACABgAFwACABkAGQACABoAGwACABsAHQACABwAHwACAB0AIQABACEAIwABACIAJQABACMAJwAB
ACQAKQABACUAKwABACYALQABACcALwABACgAMQABACkAMwABACoANQABACsANwABACwAOQABAC0A
OwABAC4APQABAC8APwABADAAQQABADEAQwABADIARQABADMARwABADQASQACADkASwACADwATQAC
AD0ATwABAD4ATwACAD8AUQAEgAAAAQAAAGYYtkoAAAAAAAAsCQAACwAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQBy
AQAAAAAEAAAAAAAAAAAAAAAKADgCAAAAAAsAAAAAAAAAAAAAAAEA7wUAAAAACwAAAAAAAAAAAAAA
AQD7CgAAAAAAAAAAAQAAANkMAAAAAAA8TW9kdWxlPgBTQ182Q0U3M0YwM0VCQTA0NTE3QkZBNTU1
QzY5NjNENTAxNS5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBPdXRw
dXQxQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTg4YzcyOWM2M2Zl
NGFmZmJmMjg0MTJkMzUxYjdjZWYuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAcmF3Q29ubmVjdGlvbgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3Fs
Q29ubmVjdGlvbgBUcmVlREJDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X0RhdGUAZ2V0
X0RhdGVfSXNOdWxsAGdldF9pZABnZXRfaWRfSXNOdWxsAGdldF9sb2FkAGdldF9sb2FkX0lzTnVs
bABnZXRfc3VmZml4AGdldF9zdWZmaXhfSXNOdWxsAGdldF9kYmFzZQBnZXRfZGJhc2VfSXNOdWxs
AGdldF9UQUJDT05URU5UAGdldF9UQUJDT05URU5UX0lzTnVsbABnZXRfQ09NUE9ORU5UREVTQ1JJ
UFRJT04AZ2V0X0NPTVBPTkVOVERFU0NSSVBUSU9OX0lzTnVsbABnZXRfQ291bnRhbGwAZ2V0X0Nv
dW50YWxsX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRf
SXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2Vf
SXNOdWxsAFRBQkNPTlRFTlQAVEFCQ09OVEVOVF9Jc051bGwAQ09NUE9ORU5UREVTQ1JJUFRJT04A
Q09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAENvdW50YWxsAENvdW50YWxsX0lzTnVsbABzZXRf
RGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lkAHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xv
YWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFz
ZV9Jc051bGwAc2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlRfSXNOdWxsAHNldF9DT01QT05F
TlRERVNDUklQVElPTgBzZXRfQ09NUE9ORU5UREVTQ1JJUFRJT05fSXNOdWxsAHNldF9UcmVlAHNl
dF9UcmVlX0lzTnVsbABzZXRfTGV2ZWwAc2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGwAc2V0
X0NvdW50QWxsX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAVHJlZQBUcmVlX0lzTnVsbABM
ZXZlbABMZXZlbF9Jc051bGwAQ291bnRBbGwAQ291bnRBbGxfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAZ2V0X0Nvbm5lY3Rp
b25UcmVlU3RydWN0AENvbm5lY3Rpb25UcmVlU3RydWN0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJRABJbnB1
dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBCdWZm
ZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNkNFNzNGMDNFQkEwNDUxN0JGQTU1
NUM2OTYzRDUwMTUAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4
ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFRvU3RyaW5n
AFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRf
Q29tbWFuZFR5cGUAQ29uY2F0AHNldF9Db21tYW5kVGV4dABzZXRfQ29ubmVjdGlvbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIAb3BfRXF1YWxpdHkARGJEYXRhUmVhZGVyAEdldFZhbHVlAFRy
aW0AQ2xvc2UAUmVhZABHZXRTdHJpbmcASXNOdWxsAEdldFVJbnQ2NABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIAVUludDY0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBJRFRTUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24ASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAABAGsgAHMA
ZQBsAGUAYwB0ACAAYwBvAG0AcABvAG4AZQBuAHQAXwBkAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAg
AHAAYQByAGUAbgB0AF8AYwBvAG0AcABvAG4AZQBuAHQAIABmAHIAbwBtACAAACcgAHcAaABlAHIA
ZQAgAGMAbwBtAHAAbwBuAGUAbgB0ACAAPQAnAAEFJwAgAAEJIAAtAD4AIAABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAAVABy
AGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYA
ZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAOj5r4hSTgpPj0SmlwyeNzgACImEXc2AgMyRCLd6XFYZNOCJ
AwYSGAMGEhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBhwDBhIdCSAD
ARIVHQgSGQMgAA4DIAACAyAACwMoAA4DKAACAygACwQgAQEOBCABAQIEIAEBCAQgAQELAygACAMG
EgUFIAEBEgUEIAASIQQoABIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUECAASKQMGEiQE
AAASJAQIABIkBiACAg4RYQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAEIAEcHAQgAQEcBSABARFxBQAB
Dh0OBSABARIdBCAAEnUFAAICDg4EIAEcCAYAAw4ODg4OBwgOCA4OEmkSdR0OHQ4DBhIVAwYdCAQg
AQ4IBCABAggEIAELCAUgAgEIHAUgABKAiQUgABKAjQYgARKAkQ4IAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQQHARIlBiABARGAqQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTg4Yzcy
OWM2M2ZlNGFmZmJmMjg0MTJkMzUxYjdjZWYAAAUBAAAAABYBABFOYXRpb25hbCBUcmVhc3VyeQAA
JwEAIkNvcHlyaWdodCBAIE5hdGlvbmFsIFRyZWFzdXJ5IDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwHERAAAAAAAAAAAAADeRAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0EQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAY
BAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAtkpmGAAAAQC2SmYYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
eAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAwADQAYgAw
AAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwAIABUAHIA
ZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABhAGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEA
YgA3AGMAZQBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA0
ADYALgAxADkAMQAyADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NgBDAEUANwAzAEYAMAAzAEUAQgBBADAANAA1ADEANwBCAEYAQQA1ADUANQBDADYAOQA2ADMARAA1
ADAAMQA1AC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQByAHkAIAAy
ADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
NgBDAEUANwAzAEYAMAAzAEUAQgBBADAANAA1ADEANwBCAEYAQQA1ADUANQBDADYAOQA2ADMARAA1
ADAAMQA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUA
OAA4AGMANwAyADkAYwA2ADMAZgBlADQAYQBmAGYAYgBmADIAOAA0ADEAMgBkADMANQAxAGIANwBj
AGUAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAyADQA
NgAuADEAOQAxADIANgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAyADQANgAuADEAOQAxADIANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_6ce73f03eba04517bfa555c6963d5015</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c9b99557b160e25aebc1bb56412df7a0d5866ff7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Resolve Tree 2"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Resolve Tree 2"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 


    object rawConnection;
    SqlConnection TreeDBConn;


    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here  dfgsdgsdgfsdgf
         */

        // Open The Connection Here!
        rawConnection = Connections.ConnectionTreeStruct.AcquireConnection(null);
        TreeDBConn = (SqlConnection)rawConnection;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        // Close the connection
        Connections.ConnectionTreeStruct.ReleaseConnection(rawConnection);

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // Table in the Structures Database to lookup Hierarchy.
        string DaTable = "FUNCTIONAL_STRUCT_CAP";

        int DaLevel = 0;

        string ResolvedPath = "";
        string CurrentComponent = "";
        SqlCommand daCommand;
        SqlDataReader daDataReader;

        CurrentComponent = Row.id.ToString();

        /* RESOLVE THE HIERARCHY HERE, BY DOING A Recursive LOOK-UP */


        // Try parameterized query fdor speed
        daCommand = new SqlCommand();
        daCommand.CommandType = CommandType.Text;
        daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";
        daCommand.Connection = TreeDBConn;
        daDataReader =  daCommand.ExecuteReader();

        while (daDataReader.Read())
        {

            // Add new Element to the Resolved Path
            if (ResolvedPath == "")
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim();
            }
            else
            {
                    ResolvedPath = daDataReader.GetValue(0).ToString() .Trim()+ " -> " + ResolvedPath;            
            }

            // Increment the level Count
            DaLevel++;

            // Get the next level to search on.......
            CurrentComponent = daDataReader.GetValue(1).ToString();

            // Command to get the Top Record
            daCommand.CommandText = " select component_description, parent_component from "+ DaTable +" where component ='" + CurrentComponent + "' ";

            daDataReader.Close();
            daDataReader = daCommand.ExecuteReader();
        
        }


        daDataReader.Close();

        // Generate a Record for the Output
        Output1Buffer.AddRow();
        Output1Buffer.COMPONENTDESCRIPTION = Row.COMPONENTDESCRIPTION;
        Output1Buffer.TABCONTENT = Row.TABCONTENT.Trim().ToString();
        Output1Buffer.Date = Row.Date;
        Output1Buffer.dbase = Row.dbase;
        Output1Buffer.id = Row.id;
        Output1Buffer.load = Row.load;
        Output1Buffer.suffix = Row.suffix;        
        Output1Buffer.Tree = ResolvedPath;
        Output1Buffer.Level = DaLevel;
        Output1Buffer.CountAll = Row.Countall;   // Aggregated Total

        // Populate The Output Fields


        // Write the level and the Resolved Path to the 

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String load
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool load_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool suffix_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String dbase
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool dbase_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String TABCONTENT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool TABCONTENT_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String COMPONENTDESCRIPTION
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public UInt64 Countall
    {
        get
        {
            return Buffer.GetUInt64(BufferColumnIndexes[7]);
        }
    }
    public bool Countall_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TABCONTENT
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TABCONTENT_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String COMPONENTDESCRIPTION
    {
        set
        {
            this[6] = value;
        }
    }
    public bool COMPONENTDESCRIPTION_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Tree
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Tree_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Level
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Level_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 CountAll
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CountAll_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ConnectionTreeStruct
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection Tree Struct").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_588c729c63fe4affbf28412d351b7cef.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4CBCFA14-7DF4-4D83-B73B-354C892A2221}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_588c729c63fe4affbf28412d351b7cef</RootNamespace><AssemblyName>SC_AED11EF84E91432D8338DF9BC85B606E</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugf6805977-228d-4de7-b365-3910e494fe17/02d9bfd3-5fe7-4f76-a033-a89d2d1a8059&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Settings.get_Default():SC_588c729c63fe4affbf28412d351b7cef.Properties.Sett" +
    "ings")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_588c729c63fe4affbf28412d351b7cef</msb:CodeName>
		<msb:DisplayName>SC_588c729c63fe4affbf28412d351b7cef</msb:DisplayName>
		<msb:ProjectId>{D0150165-18E8-4C8D-A568-313A64F77886}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_588c729c63fe4affbf28412d351b7cef.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_588c729c63fe4affbf28412d351b7cef")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_588c729c63fe4affbf28412d351b7cef.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_588c729c63fe4affbf28412d351b7cef.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_AED11EF84E91432D8338DF9BC85B606E.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
JwAoJgAAAACGGMQIMgEnADcmAAAAAIMYxAgGACgAPyYAAAAAkwhJCDgBKABrJgAAAACTCCsCPQEo
AHImAAAAAJMINwJCASgAeiYAAAAAlghbCkgBKQCBJgAAAACGGMQIBgApAIkmAAAAAJEYyghNASkA
AAABADsLAAABAEIIAAACAKoJAAADAJgHAAABAEIIAAACAKoJAAADAJgHAAABAGoEAAABAGoEAAAB
AGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoE
AAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAIgAAAAC
ANUBAAADAEIIAAAEAJgHAAABAPkJAAACANEIAAADAOsJAAAEAJgHAAABAEIIAAABADsLAAABAKEK
AAABAKEKAAABAGoECQDECAEAEQDECAYAGQDECAoAKQDECBAAMQDECBAAOQDECBAAQQDECBAASQDE
CBAAUQDECBAAWQDECBAAYQDECBAAaQDECAYAuQDECAYA2QDECBUA6QDECAYAqQBKBAYAsQAABxsA
qQBVBAYAsQASByAAcQCKBDAAgQDECAYA8QAbAjQAAQEVCjoA8QAJCxAAgQDxBkAAgQAECEYAAQFi
C0sACQFhBFEAAQFuBjAAAQEVClYACQF/AgYACQE7AV0AkQDECGEAkQBCCGsAkQCqCW8AmQCTBHMA
kQBPBngAmQB1AH0AkQA3C10AkQBPCl0AkQBeBoIAkQBWBgEAEQHECBAAkQAZCwYAkQBMCgYAqQDE
CAYAAQHYCYgAqQC+CZAAmQA8Cl0AqQCQAJoAcQDECAYAqQAcAaEAMQHRBqcAOQHfAa0AQQFdCLQA
SQHDAbkASQFVC8IAwQDECMgA4QDECAYALgALAHUBLgATAH4BLgAbAJ0BLgAjAKYBLgArAM8BLgAz
AM8BLgA7ANUBLgBDAKYBLgBLAOwBLgBTAM8BLgBbABQCQwBjAFwCAwFrAFwCYQF7AFwCyQRzAJ0B
6QRzAJ0BJQCWAAMAAQAEABEABgAlAAgAJgAJACgAAACSAlEBAADtBVUBAACAAVEBAACdBVUBAABN
AVEBAAB/BVUBAABOC1EBAABIBlUBAAB5AlEBAADMBVUBAAAFAVEBAABZBVUBAADdAFEBAAAjBVUB
AADOBFkBAAAiBlUBAACSAlEBAADtBVUBAACAAVEBAACdBVUBAABNAVEBAAB/BVUBAABOC1EBAABI
BlUBAAB5AlEBAADMBVUBAAAFAVEBAABZBVUBAADdAFEBAAAjBVUBAACsAVEBAACrBVUBAAC3BF0B
AAD9BVUBAADBBFkBAAAOBlUBAAAnCmEBAABNCGYBAABLAmsBAABfCnABAgAGAAMAAgAHAAUAAgAI
AAcAAgAJAAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAPABUAAgAQABcAAgARABkA
AgASABsAAgATAB0AAgAUAB8AAgAVACEAAQAZACMAAQAaACUAAQAbACcAAQAcACkAAQAdACsAAQAe
AC0AAQAfAC8AAQAgADEAAQAhADMAAQAiADUAAQAjADcAAQAkADkAAQAlADsAAQAmAD0AAQAnAD8A
AQAoAEEAAQApAEMAAQAqAEUAAQArAEcAAQAsAEkAAgA5AEsAAgA8AE0AAgA9AE8AAQA+AE8AAgA/
AFEABIAAAAEAAADGHMRyAAAAAAAAnAAAAAQAAAAAAAAAAAAAANAAMgEAAAAACwAAAAAAAAAAAAAA
2QCrCgAAAAAEAAAAAAAAAAAAAADQABABAAAAAAsAAAAAAAAAAAAAANkAyAoAAAAACwAAAAAAAAAA
AAAA2QCiBwAAAAAEAAAAAAAAAAAAAADQAGcGAAAAAAsAAAAAAAAAAAAAANkAxQcAAAAAAAAAAAEA
AAAfCQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAEludDMyAEdldFVJbnQ2NAA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAFNDX0FF
RDExRUY4NEU5MTQzMkQ4MzM4REY5QkM4NUI2MDZFAGdldF9DT01QT05FTlRERVNDUklQVElPTgBz
ZXRfQ09NUE9ORU5UREVTQ1JJUFRJT04AZ2V0X1RBQkNPTlRFTlQAc2V0X1RBQkNPTlRFTlQAU3lz
dGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFJlYWQAZ2V0X2xvYWQAc2V0
X2xvYWQASW5wdXRzRmluaXNoZWQATWFya091dHB1dHNGaW5pc2hlZABnZXRfaWQAc2V0X2lkAERi
Q29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBzZXRfVHJlZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5h
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0NvbW1hbmRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBnZXRfZGJhc2UAc2V0X2RiYXNlAENsb3NlAGdldF9EYXRlAHNldF9EYXRlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAR2V0VmFsdWUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAHNldF9MZXZlbABzZXRfQ291bnRBbGwAZ2V0X0NvdW50YWxsAFNDX0FF
RDExRUY4NEU5MTQzMkQ4MzM4REY5QkM4NUI2MDZFLmRsbABnZXRfQ09NUE9ORU5UREVTQ1JJUFRJ
T05fSXNOdWxsAHNldF9DT01QT05FTlRERVNDUklQVElPTl9Jc051bGwAZ2V0X1RBQkNPTlRFTlRf
SXNOdWxsAHNldF9UQUJDT05URU5UX0lzTnVsbABnZXRfbG9hZF9Jc051bGwAc2V0X2xvYWRfSXNO
dWxsAGdldF9pZF9Jc051bGwAc2V0X2lkX0lzTnVsbABzZXRfVHJlZV9Jc051bGwAZ2V0X2RiYXNl
X0lzTnVsbABzZXRfZGJhc2VfSXNOdWxsAGdldF9EYXRlX0lzTnVsbABzZXRfRGF0ZV9Jc051bGwA
c2V0X0xldmVsX0lzTnVsbABzZXRfQ291bnRBbGxfSXNOdWxsAGdldF9Db3VudGFsbF9Jc051bGwA
Z2V0X3N1ZmZpeF9Jc051bGwAc2V0X3N1ZmZpeF9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0
ZW0AVHJpbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFRyZWVEQkNvbm4AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVD
b25uZWN0aW9uQ29sbGVjdGlvbgBzZXRfQ29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBSZWxl
YXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAHJhd0Nvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5m
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAERiRGF0YVJlYWRlcgBTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASW5wdXQwQnVmZmVyAE91dHB1dDFCdWZmZXIAUGlwZWxp
bmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25N
YW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZi5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNTg4YzcyOWM2M2ZlNGFmZmJmMjg0
MTJkMzUxYjdjZWYuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAEZpbmlzaE91
dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQAT2JqZWN0AGdldF9Db25uZWN0aW9uVHJl
ZVN0cnVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAU3lzdGVt
LkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAc2V0X0NvbW1hbmRUZXh0
AEFkZFJvdwBJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X3N1ZmZpeABzZXRfc3Vm
Zml4AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQAAAAArRgBVAE4AQwBUAEkATwBOAEEATABfAFMA
VABSAFUAQwBUAF8AQwBBAFAAAAEAayAAcwBlAGwAZQBjAHQAIABjAG8AbQBwAG8AbgBlAG4AdABf
AGQAZQBzAGMAcgBpAHAAdABpAG8AbgAsACAAcABhAHIAZQBuAHQAXwBjAG8AbQBwAG8AbgBlAG4A
dAAgAGYAcgBvAG0AIAAAJyAAdwBoAGUAcgBlACAAYwBvAG0AcABvAG4AZQBuAHQAIAA9ACcAAQUn
ACAAAQkgAC0APgAgAAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
D0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADEAAC1DAG8AbgBuAGUAYwB0AGkAbwBuACAA
VAByAGUAZQAgAFMAdAByAHUAYwB0AABxUwBDAF8ANQA4ADgAYwA3ADIAOQBjADYAMwBmAGUANABh
AGYAZgBiAGYAMgA4ADQAMQAyAGQAMwA1ADEAYgA3AGMAZQBmAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAGMEjWPHZ6NJsf6DJ4FpVjAABCABAQgDIAABBSABARER
BCABAQ4FIAEBEWkEIAEcHAQgAQEcCgcGDggODhJBEkUDIAAOBSABARF9BQABDh0OBSABARI9BCAA
EkUFAAICDg4EIAEcCAYAAw4ODg4DIAACCSADARJNHQgSUQMGEk0DBh0IBCABDggEIAECCAQgAQsI
BSACAQgcByACAg4RgJUFIAEdCAgDBwEIBgACCBJRDgUgABKAmQUgABKAnQYgARKAoQ4EIAASWQgA
ARKApRGAqQUgABKArQcgAgEOEoCtCLd6XFYZNOCJCImEXc2AgMyRAgYcAwYSPQMGEhgDBhIcAwYS
EAIGCAMGElUDBhJhAwYSZQMGEiQFIAEBEgwDIAALBCABAQIEIAEBCwkgBAEIDhJNElELIAQBCB0I
HRJNElEFIAEBElUEAAASYQQAABJlBQABARJlBAAAEiQDAAABAygADgMoAAIDKAALAygACAQoABJZ
BAgAEmEECAASZQQIABIkCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTQ181ODhjNzI5YzYzZmU0YWZmYmYyODQxMmQzNTFiN2NlZgAABQEAAAAAFgEA
EU5hdGlvbmFsIFRyZWFzdXJ5AAAnAQAiQ29weXJpZ2h0IEAgTmF0aW9uYWwgVHJlYXN1cnkgMjAx
NAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAADEMAAAAAAAAAAAAAJkMAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABhDAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
XgQAAAAAAAAAAAAAXgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAMRyxhwAAAEAxHLGHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BL4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAJoDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABEABIAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAE4AYQB0AGkAbwBuAGEAbAAgAFQAcgBlAGEAcwB1AHIAeQAAAHAAJAABAEYAaQBsAGUA
RABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1ADgAOABjADcAMgA5AGMANgAzAGYAZQA0
AGEAZgBmAGIAZgAyADgANAAxADIAZAAzADUAMQBiADcAYwBlAGYAAAA+AA8AAQBGAGkAbABlAFYA
ZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAzADYANgAuADIAOQAzADgAMAAAAAAAcAAoAAEASQBu
AHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBBAEUARAAxADEARQBGADgANABFADkAMQA0ADMA
MgBEADgAMwAzADgARABGADkAQgBDADgANQBCADYAMAA2AEUALgBkAGwAbAAAAGoAIwABAEwAZQBn
AGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE4AYQB0AGkA
bwBuAGEAbAAgAFQAcgBlAGEAcwB1AHIAeQAgADIAMAAxADQAAAAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAQwBfAEEARQBEADEAMQBFAEYAOAA0AEUAOQAxADQAMwAyAEQAOAAzADMAOABE
AEYAOQBCAEMAOAA1AEIANgAwADYARQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAEMAXwA1ADgAOABjADcAMgA5AGMANgAzAGYAZQA0AGEAZgBmAGIAZgAyADgANAAx
ADIAZAAzADUAMQBiADcAYwBlAGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAMwA2ADYALgAyADkAMwA4ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMwA2ADYALgAyADkAMwA4ADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAADgzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_aed11ef84e91432d8338df9bc85b606e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">dbd4cfa1ba2d0552c65baeb14ee84b54</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">c9b99557b160e25aebc1bb56412df7a0d5866ff7</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Resolve Tree 2.Connections[Connection Tree Struct]"
                  connectionManagerID="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[10.125.153.14.TREE_STRUCTURES.sa1]"
                  description="Connects To The Tree Struct Database ADO.NET"
                  name="Connection Tree Struct" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[load]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[suffix]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[dbase]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output].Columns[TAB_CONTENT]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Match Output].Columns[COMPONENT_DESCRIPTION]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0].Columns[Count all]"
                      cachedDataType="ui8"
                      cachedName="Count all"
                      lineageId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1].Columns[Count all]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component - SPLIT STRINGS AND COOKIES"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        string[] DaData; // Row.csUriQuery.Split('&');

        try
        {
            
           DaData = Row.csUriQuery.Split('&');      

            Output1Buffer.AddRow();

            // Just get the year and month
            Output1Buffer.Date = Row.date.ToString().Substring(0,7);

            Output1Buffer.id = DaData[0].Split('=')[1].ToString();
            Output1Buffer.dbase = DaData[3].Split('=')[1].ToString();
            Output1Buffer.load = DaData[1].Split('=')[1].ToString();
            Output1Buffer.suffix = DaData[2].Split('=')[1].ToString().Replace("%20","");

        }
        catch (Exception ex)
        {

            string a = "100";

        }

        finally
        { 
        
        
        
        
        }

        // Lookup the TAB Name and calculate the level of the item that was clicked on 




    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime date
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String csUriStem
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool csUriStem_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String csUriQuery
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool csUriQuery_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String id
    {
        set
        {
            this[1] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String load
    {
        set
        {
            this[2] = value;
        }
    }
    public bool load_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String suffix
    {
        set
        {
            this[3] = value;
        }
    }
    public bool suffix_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String dbase
    {
        set
        {
            this[4] = value;
        }
    }
    public bool dbase_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d1da5c277f9a412b8b1e3891cffd682c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{208CB9BF-22DD-4716-B8A1-DBCC00026C92}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d1da5c277f9a412b8b1e3891cffd682c</RootNamespace>
    <AssemblyName>SC_d1da5c277f9a412b8b1e3891cffd682c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug00e81506-ccb9-440d-b812-9d294ad155fa/a36e61d1-8245-42eb-a8ba-c0c61eca5e5a&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1da5c277f9a412b8b1e3891cffd682c.Properties.Settings.get_Default():SC_d1da5c277f9a412b8b1e3891cffd682c.Properties.Sett" +
    "ings")]

namespace SC_d1da5c277f9a412b8b1e3891cffd682c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_d1da5c277f9a412b8b1e3891cffd682c</msb:CodeName>
		<msb:DisplayName>SC_d1da5c277f9a412b8b1e3891cffd682c</msb:DisplayName>
		<msb:ProjectId>{13190EFC-AF9D-410A-B99D-42F076CD4615}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_d1da5c277f9a412b8b1e3891cffd682c.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d1da5c277f9a412b8b1e3891cffd682c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("National Treasury")]
[assembly: AssemblyProduct("SC_d1da5c277f9a412b8b1e3891cffd682c")]
[assembly: AssemblyCopyright("Copyright @ National Treasury 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1da5c277f9a412b8b1e3891cffd682c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1da5c277f9a412b8b1e3891cffd682c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1da5c277f9a412b8b1e3891cffd682c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d1da5c277f9a412b8b1e3891cffd682c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d1da5c277f9a412b8b1e3891cffd682c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d1da5c277f9a412b8b1e3891cffd682c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKvLTlcAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAA3jkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA5AABLAAAAAEAAAHAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHAEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
OQAAAAAAAEgAAAACAAUAECUAAIAUAAABAAAAAAAAAFgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMkAAAGfQEAAAQCAnMlAAAGfQIAAAQqAzAE
AE8AAAAAAAAABHIBAABwGm8OAAAKLBUCBQIDKA8AAAoOBHMNAAAGbwcAAAYFbxAAAAosIwICewQA
AAQXWH0EAAAEAnsEAAAEFzMMAm8DAAAGAigEAAAGKgYqbgJ7AwAABCwSAnsDAAAEbyIAAAYCFH0D
AAAEKgAAABMwBQA9AAAAAQAAERYKKy4EBpQOBHIRAABwKBEAAAozGQIFBpoCBAaUKA8AAAoOBHMW
AAAGfQMAAAQGF1gKBgMyzgJvBgAABioGKkorBwIDbwgAAAYDbxQAAAYt8SoGKh4CKBMAAAoqHgIo
FAAACiobMAUABAEAAAIAABEDbxIAAAYXjRkAAAELBxYfJp0HbxUAAAoKAnsDAAAEbyEAAAYCewMA
AAQDbw4AAAYMEgL+FgcAAAFvFgAAChYdbxcAAApvFwAABgJ7AwAABAYWmheNGQAAAQ0JFh89nQlv
FQAACheabxYAAApvGQAABgJ7AwAABAYZmheNGQAAARMEEQQWHz2dEQRvFQAACheabxYAAApvHwAA
BgJ7AwAABAYXmheNGQAAARMFEQUWHz2dEQVvFQAACheabxYAAApvGwAABgJ7AwAABAYYmheNGQAA
ARMGEQYWHz2dEQZvFQAACheabxYAAApyIwAAcHIrAABwbxgAAApvHQAABt4DJt4AKkEcAAAAAAAA
AAAAAAABAAAAAQAAAwAAABoAAAEeAigBAAAGKioCAwQFKBkAAAoqUgJ7GgAACgJ7GwAAChaUbxwA
AAoqIgIWKB0AAAoqUgJ7GgAACgJ7GwAACheUbx4AAAoqIgIXKB0AAAoqUgJ7GgAACgJ7GwAAChiU
bx4AAAoqIgIYKB0AAAoqHgIoHwAACioeAiggAAAKKioCAwQFKBkAAAoqJgIWAyghAAAKKloDLAgC
FigiAAAKKnItAABwcyMAAAp6JgIXAyghAAAKKloDLAgCFygiAAAKKnItAABwcyMAAAp6JgIYAygh
AAAKKloDLAgCGCgiAAAKKnItAABwcyMAAAp6JgIZAyghAAAKKloDLAgCGSgiAAAKKnItAABwcyMA
AAp6JgIaAyghAAAKKloDLAgCGigiAAAKKnItAABwcyMAAAp6HgIoJAAACioeAiglAAAKKh4CKCAA
AAoqOgIoJgAACgIDfQUAAAQqOgIoJgAACgIDfQYAAAQqHgIoJgAACioAEzACAC0AAAADAAARfgcA
AAQtIHLKAABw0AgAAAIoKAAACm8pAAAKcyoAAAoKBoAHAAAEfgcAAAQqGn4IAAAEKh4CgAgAAAQq
Gn4JAAAEKi5zKwAABoAJAAAEKh4CKC0AAAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAADYBwAAI34AAEQIAADYCAAAI1N0cmluZ3MAAAAAHBEAADwBAAAj
VVMAWBIAABAAAAAjR1VJRAAAAGgSAAAYAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAW
AAABAAAAIgAAAAkAAAAJAAAALAAAAB4AAAAtAAAADwAAAAMAAAAEAAAAEwAAABQAAAABAAAABAAA
AAEAAAAAAAoAAQAAAAAABgD8ANsABgAMAdsACgApASIBDgBFATABEgCTAdsABgCiAdsACgBBAiIB
CgAVBAQECgBGBDEECgA5BR8FCgBkBVIFCgB7BVIFCgCYBVIFCgC3BVIFCgDQBVIFCgDpBVIFCgAE
BlIFCgAfBlIFCgA4BlIFCgBxBlEGCgCRBlEGCgDTBiIBCgDaBiIBBgAfB9sACgBGByIBCgBsByIB
CgCkByIBCgDRB74HCgDuByIBCgDzByIBCgAXCFIFDgBDCC0IDgBcCC0ICgBxCFEGAAAAAAEAAAAA
AAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAAFAAkAAQAQAEsAAAAJAAUADQABABAAWAAAAAkA
BQAWAAEAEABmAAAADQAFACQAAQAQAHIAAAANAAYAJQAAABAAfACGAA0ABwAmAAABEAC1AIYAEQAJ
ACoABgBmABMABgByABcABgBYAB8AAQBjASMAAQD0A3AAAQD0A3AAEQAlBHoAEQBSBH4AEQCWBJwA
UCAAAAAAhhhdARsAAQBwIAAAAADGALABJgABAMsgAAAAAMYBvQEbAAUAzSAAAAAAgQDLARsABQDs
IAAAAADGAN8BMAAFADUhAAAAAMYB6wEbAAkANyEAAAAAxgH/ATwACQBKIQAAAADGARMCPAAKAEwh
AAAAAMYAKgIbAAsAVCEAAAAAxgA1AhsACwBcIQAAAADGABMCPAALAIgiAAAAAIYYXQEbAAwAkCIA
AAAAhhhdAUIADACbIgAAAACGCEoCTAAPALAiAAAAAIYIUwJRAA8AuSIAAAAAhghjAlUADwDOIgAA
AACGCHECUQAPANciAAAAAIYIhgJVAA8A7CIAAAAAhgiVAlEADwD1IgAAAACGAKsCUQAPAP0iAAAA
AIYAswJRAA8ABSMAAAAAhhhdAUIADwAQIwAAAACGCAgDZgASABojAAAAAIYIEQNrABMAMSMAAAAA
hgghA2YAFAA7IwAAAACGCCgDawAVAFIjAAAAAIYINgNmABYAXCMAAAAAhgg/A2sAFwBzIwAAAACG
CE8DZgAYAH0jAAAAAIYIWgNrABkAlCMAAAAAhghsA2YAGgCeIwAAAACGCHYDawAbALUjAAAAAIYA
hwMbABwAvSMAAAAAhgCOAxsAHADFIwAAAACGALMCUQAcAM0jAAAAAIYYXQF0ABwA3CMAAAAAhhhd
AXQAHQDrIwAAAACDGF0BGwAeAPQjAAAAAJMIYgSCAB4ALSQAAAAAkwh2BIcAHgA0JAAAAACTCIIE
jAAeADwkAAAAAJYIpgSgAB8ATyQAAAAAhhhdARsAHwBDJAAAAACRGIwINgEfAAAAAQC6BAAAAgDC
BAAAAwDMBAAABADTBAAAAQDdBAAAAgDlBAAAAwDvBAAABADTBAAAAQDMBAAAAQD3BAAAAQD3BAAA
AQDMBAAAAgD7BAAAAwDTBAAAAQDMBAAAAgD7BAAAAwDTBAAAAQAPBQAAAQAPBQAAAQAPBQAAAQAP
BQAAAQAPBQAAAQAPBQAAAQAPBQAAAQAPBQAAAQAPBQAAAQAPBQAAAQAVBQAAAQAVBQAAAQAPBVEA
XQFmAFkAXQFmAGEAXQFmAGkAXQFmAHEAXQFmAHkAXQFmAIEAXQFmAIkAXQFmAJEAXQFmAJkAXQFm
AKEAXQGqAKkAXQEbAAkAXQEbALEA6wavAAkA8ga2ACkAAwdRAAkAEwe8AMEAXQEbAAkAKgIbAAkA
NQIbALEASwfMABkAUQdVALEAWgfTALEAZAfZABEAXQFCABEAzATwABEA+wT0ACkAdgf4ABEAggf+
ACkAiQcDAREAqwJRABEAswJRABEAkwcIAREAnAeqANkAXQFmABEAhwMbABEAjgMbABkAXQEbAOEA
XQEbAOkABQgOAekAIAgVAUEAXQEaAQEBXQEmAREBXQEbACEAXQEbAC4AGwCrAS4AYwD5AS4ACwA6
AS4AEwCCAS4AIwCrAS4AKwCxAS4AMwCCAS4AOwDIAS4AQwCrAS4AWwDwAWMAkwDHAAMBOwHHACEB
YwHHACkCWwEtAUkCWwEtAcMA3wAhAQQAAQAFAAcACAARAAkAEwAAAL8CWQAAAMQCXgAAANACYgAA
ANoCXgAAAOsCYgAAAPYCXgAAAJ0DYgAAAKIDXgAAAK4DYgAAALEDXgAAALsDYgAAAMADXgAAAMwD
YgAAANMDXgAAAOEDYgAAAOcDXgAAABUEkgAAAI4ElwAAALIEpQACAA4AAwACAA8ABQACABAABwAC
ABEACQACABIACwACABMADQABABcADwABABgAEQABABkAEwABABoAFQABABsAFwABABwAGQABAB0A
GwABAB4AHQABAB8AHwABACAAIQACACcAIwACACgAJQABACkAJQACACoAJwAEgAAAAQAAAGwXJWEA
AAAAAACvBgAACwAAAAAAAAAAAAAAAQC+AAAAAAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAA
AAAAAAoAIgEAAAAACwAAAAAAAAAAAAAAAQByAQAAAAAAAAAAAQAAAJMIAAAAAAAAADxNb2R1bGU+
AFNDX2QxZGE1YzI3N2Y5YTQxMmI4YjFlMzg5MWNmZmQ2ODJjLmRsbABVc2VyQ29tcG9uZW50AFNj
cmlwdE1haW4ASW5wdXQwQnVmZmVyAE91dHB1dDFCdWZmZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVz
AFJlc291cmNlcwBTQ19kMWRhNWMyNzdmOWE0MTJiOGIxZTM4OTFjZmZkNjgyYy5Qcm9wZXJ0aWVz
AFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1ZmZlcgBtc2NvcmxpYgBTeXN0
ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAC5j
dG9yAElucHV0c0ZpbmlzaGVkAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVs
aW5lQnVmZmVyAE91dHB1dE5hbWVNYXAAUHJvY2Vzc0lucHV0AEZpbmlzaE91dHB1dHMATWFya091
dHB1dHNGaW5pc2hlZABQcmltZU91dHB1dABDcmVhdGVOZXdPdXRwdXRSb3dzAElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAERh
dGVUaW1lAGdldF9kYXRlAGdldF9kYXRlX0lzTnVsbABnZXRfY3NVcmlTdGVtAGdldF9jc1VyaVN0
ZW1fSXNOdWxsAGdldF9jc1VyaVF1ZXJ5AGdldF9jc1VyaVF1ZXJ5X0lzTnVsbABOZXh0Um93AEVu
ZE9mUm93c2V0AGRhdGUAZGF0ZV9Jc051bGwAY3NVcmlTdGVtAGNzVXJpU3RlbV9Jc051bGwAY3NV
cmlRdWVyeQBjc1VyaVF1ZXJ5X0lzTnVsbABzZXRfRGF0ZQBzZXRfRGF0ZV9Jc051bGwAc2V0X2lk
AHNldF9pZF9Jc051bGwAc2V0X2xvYWQAc2V0X2xvYWRfSXNOdWxsAHNldF9zdWZmaXgAc2V0X3N1
ZmZpeF9Jc051bGwAc2V0X2RiYXNlAHNldF9kYmFzZV9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93
c2V0AERhdGUARGF0ZV9Jc051bGwAaWQAaWRfSXNOdWxsAGxvYWQAbG9hZF9Jc051bGwAc3VmZml4
AHN1ZmZpeF9Jc051bGwAZGJhc2UAZGJhc2VfSXNOdWxsAFBhcmVudENvbXBvbmVudABTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZh
dWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAT3V0cHV0cwBPdXRwdXRJRHMA
QnVmZmVycwBSb3cAQnVmZmVyQ29sdW1uSW5kZXhlcwB2YWx1ZQBDb21wb25lbnQAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDX2QxZGE1
YzI3N2Y5YTQxMmI4YjFlMzg5MWNmZmQ2ODJjAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFs
cwBHZXRDb2x1bW5JbmRleGVzAGdldF9FbmRPZlJvd3NldABHZXRPdXRwdXRJRABTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBDaGFyAFNwbGl0AFRvU3RyaW5nAFN1YnN0cmlu
ZwBSZXBsYWNlAEV4Y2VwdGlvbgBHZXREYXRlVGltZQBJc051bGwAR2V0U3RyaW5nAHNldF9JdGVt
AFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTQ19kMWRhNWMyNzdmOWE0MTJiOGIxZTM4OTFjZmZkNjgyYy5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABw
AHUAdAAgADEAAAclADIAMAAAAQCAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBh
AG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4A
IABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBh
AGQALgAAcVMAQwBfAGQAMQBkAGEANQBjADIANwA3AGYAOQBhADQAMQAyAGIAOABiADEAZQAzADgA
OQAxAGMAZgBmAGQANgA4ADIAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAANvVOwkTrS0+KOsp9fiTljwAIiYRdzYCAzJEIt3pcVhk04IkDBhIYAwYSHAMgAAEDBhIU
AgYICSAEAQgOEhUSGQsgBAEIHQgdEhUSGQUgAQESEAkgAwESFR0IEhkEIAARHQMgAAIDIAAOBCgA
ER0DKAACAygADgQgAQEOBCABAQIDBhIFBSABARIFAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgA
EiEECAASJQMGEiQEAAASJAQIABIkBCABAQgGIAICDhFdBSABHQgIBgACCBIZDgMHAQgEAQAAAAYg
AR0OHQMFIAIOCAgFIAIODg4QBwcdDh0DER0dAx0DHQMdAwMGEhUDBh0IBSABER0IBCABAggEIAEO
CAUgAgEIHAYAARJ1EXkEIAASfQYgAgEOEn0EBwESIQYgAQERgIUIAQACAAAAAAADAAABRwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0KAEAI1NDX2QxZGE1YzI3N2Y5YTQxMmI4YjFlMzg5MWNmZmQ2ODJjAAAFAQAAAAAW
AQARTmF0aW9uYWwgVHJlYXN1cnkAACcBACJDb3B5cmlnaHQgQCBOYXRpb25hbCBUcmVhc3VyeSAy
MDE0AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBuDkAAAAAAAAAAAAA
zjkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMA5AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAYBAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAJWFsFwAAAQAlYWwXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEeAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABOAGEAdABpAG8AbgBhAGwA
IABUAHIAZQBhAHMAdQByAHkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZAAxAGQAYQA1AGMAMgA3ADcAZgA5AGEANAAxADIAYgA4AGIAMQBlADMAOAA5ADEA
YwBmAGYAZAA2ADgAMgBjAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADUAOQA5ADYALgAyADQAOAA2ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBDAF8AZAAxAGQAYQA1AGMAMgA3ADcAZgA5AGEANAAxADIAYgA4AGIAMQBlADMAOAA5ADEAYwBm
AGYAZAA2ADgAMgBjAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABOAGEAdABpAG8AbgBhAGwAIABUAHIAZQBhAHMAdQBy
AHkAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBDAF8AZAAxAGQAYQA1AGMAMgA3ADcAZgA5AGEANAAxADIAYgA4AGIAMQBlADMAOAA5ADEAYwBm
AGYAZAA2ADgAMgBjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
QwBfAGQAMQBkAGEANQBjADIANwA3AGYAOQBhADQAMQAyAGIAOABiADEAZQAzADgAOQAxAGMAZgBm
AGQANgA4ADIAYwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NQA5ADkANgAuADIANAA4ADYAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADkANgAuADIANAA4ADYAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA4DkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d1da5c277f9a412b8b1e3891cffd682c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">7a6f362e6e0ae090e9585c22b914332c</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">8941049be90f0cf29329371bd1776f0942478f9d</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Inputs[Input 0].Columns[date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="date"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Inputs[Input 0].Columns[csUriStem]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="csUriStem"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUriStem]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Inputs[Input 0].Columns[csUriQuery]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="csUriQuery"
                      lineageId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[csUriQuery]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1].Columns[dbase]"
                      name="dbase" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Sort"
              componentClassID="DTSTransform.Sort.3"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">5</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">6</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">7</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Date]"
                      name="Date"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[dbase]"
                      name="dbase"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Tree]"
                      name="Tree"
                      sortKeyPosition="5">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Level]"
                      name="Level"
                      sortKeyPosition="6">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Count All]"
                      name="Count All"
                      sortKeyPosition="7">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Union All"
              componentClassID="DTSTransform.UnionAll.3"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Union All 3"
              componentClassID="DTSTransform.UnionAll.3"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All 3"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5]"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1]"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6]"
                  hasSideEffects="true"
                  name="Union All Input 6">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7]"
                  hasSideEffects="true"
                  name="Union All Input 7">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8]"
                  hasSideEffects="true"
                  name="Union All Input 8">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9]"
                  hasSideEffects="true"
                  name="Union All Input 9">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10]"
                  hasSideEffects="true"
                  name="Union All Input 10">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11]"
                  hasSideEffects="true"
                  name="Union All Input 11">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12]"
                  hasSideEffects="true"
                  name="Union All Input 12">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13]"
                  hasSideEffects="true"
                  name="Union All Input 13">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14]"
                  hasSideEffects="true"
                  name="Union All Input 14">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16]"
                  hasSideEffects="true"
                  name="Union All Input 16">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[Date]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Date"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Date]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[load]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="load"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[load]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[suffix]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="suffix"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[suffix]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[dbase]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="dbase"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[dbase]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[TAB_CONTENT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TAB_CONTENT"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[TAB_CONTENT]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[COMPONENT_DESCRIPTION]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="300"
                      cachedName="COMPONENT_DESCRIPTION"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[COMPONENT_DESCRIPTION]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[Tree]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5000"
                      cachedName="Tree"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Tree]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[Level]"
                      cachedDataType="i4"
                      cachedName="Level"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Level]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16].Columns[Count All]"
                      cachedDataType="ui8"
                      cachedName="Count All"
                      lineageId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1].Columns[Count All]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 15]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 15">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[load]"
                      name="load" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[suffix]"
                      name="suffix" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[dbase]"
                      name="dbase" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[TAB_CONTENT]"
                      name="TAB_CONTENT" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]"
                      codePage="1252"
                      dataType="str"
                      length="300"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[COMPONENT_DESCRIPTION]"
                      name="COMPONENT_DESCRIPTION" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Tree]"
                      name="Tree" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Level]"
                      name="Level" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1].Columns[Count All]"
                      name="Count All" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Aggregate Output 1]"
              endId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Inputs[Conditional Split Input]"
              name="Aggregate Output 1"
              startId="Package\Data Flow Task\Aggregate 1.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_FINANCIALS_CAP]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Inputs[Lookup Input]"
              name="Dbase_FINANCIALS_CAP"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_FINANCIALS_CAP]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_FINANCIALS_RESP_SEG]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Inputs[Lookup Input]"
              name="Dbase_FINANCIALS_RESP_SEG"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_FINANCIALS_RESP_SEG]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_HEADCOUNT]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Inputs[Lookup Input]"
              name="Dbase_HEADCOUNT"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_HEADCOUNT]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_HEADCOUNT_NEW]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Inputs[Lookup Input]"
              name="Dbase_HEADCOUNT_NEW"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_HEADCOUNT_NEW]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LABOUR]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Inputs[Lookup Input]"
              name="Dbase_LABOUR"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LABOUR]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LABOUR_NEW]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Inputs[Lookup Input]"
              name="Dbase_LABOUR_NEW"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LABOUR_NEW]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LEAVE]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Inputs[Lookup Input]"
              name="Dbase_LEAVE"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LEAVE]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LEAVE_NEW]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Inputs[Lookup Input]"
              name="Dbase_LEAVE_NEW"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LEAVE_NEW]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LOGIS]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Inputs[Lookup Input]"
              name="Dbase_LOGIS"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LOGIS]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LOGIS_BOE]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Inputs[Lookup Input]"
              name="Dbase_LOGIS_BOE"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LOGIS_BOE]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_LOGIS_DISNOTES]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Inputs[Lookup Input]"
              name="Dbase_LOGIS_DISNOTES"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_LOGIS_DISNOTES]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_POSTS]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Inputs[Lookup Input]"
              name="Dbase_POSTS"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_POSTS]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_POSTS_NEW]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Inputs[Lookup Input]"
              name="Dbase_POSTS_NEW"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_POSTS_NEW]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_RANDGR]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Inputs[Lookup Input]"
              name="Dbase_RANDGR"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_RANDGR]" />
            <path
              refId="Package\Data Flow Task.Paths[Dbase_RANDGR_NEW]"
              endId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Inputs[Lookup Input]"
              name="Dbase_RANDGR_NEW"
              startId="Package\Data Flow Task\Conditional Split  - PER DATABASE.Outputs[Dbase_RANDGR_NEW]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output30]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output29]"
              endId="Package\Data Flow Task\Resolve Tree.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output28]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output27]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output26]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output25]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output24]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output23]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output22]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output21]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output20]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output18]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output17]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output16]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output15]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output19]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output13]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output14]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output]"
              endId="Package\Data Flow Task\Resolve Tree 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output1]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output3]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output4]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output5]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output6]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output2]"
              endId="Package\Data Flow Task\Resolve Tree 1 1.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 1.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output8]"
              endId="Package\Data Flow Task\DAILY or FUNC.Inputs[Conditional Split Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output9]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output10]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output12]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output7]"
              endId="Package\Data Flow Task\Resolve Tree 2.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 2.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output11]"
              endId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup No Match Output]"
              endId="Package\Data Flow Task\NO MATCH.Inputs[Union All Input 1]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup No Match Output1]"
              endId="Package\Data Flow Task\NOMATCH 2.Inputs[Union All Input 2]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task\Lookup TREE ITEM 1.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[OLE DB Source Output]"
              endId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 115]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 8]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 110]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 6]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 114]"
              endId="Package\Data Flow Task\Aggregate 1.Inputs[Aggregate Input 1]"
              name="Output 1"
              startId="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 113]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 11]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 112]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 13]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 111]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 9]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 116]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 7]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 19]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 12]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 11]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 1]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 17]"
              endId="Package\Data Flow Task\Union All.Inputs[Union All Input 1]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 16]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 16]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 15]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 3]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 14]"
              endId="Package\Data Flow Task\Union All.Inputs[Union All Input 2]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 2.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 13]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 14]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 12]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 5]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 1]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 2]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 18]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 10]"
              name="Output 1"
              startId="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1.Outputs[Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Sort Output]"
              endId="Package\Data Flow Task\CSV File Destination.Inputs[Flat File Destination Input]"
              name="Sort Output"
              startId="Package\Data Flow Task\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Data Flow Task.Paths[SUFFIX_DAILY]"
              endId="Package\Data Flow Task\Lookup TREE ITEM.Inputs[Lookup Input]"
              name="SUFFIX_DAILY"
              startId="Package\Data Flow Task\DAILY or FUNC.Outputs[SUFFIX_DAILY]" />
            <path
              refId="Package\Data Flow Task.Paths[SUFFIX_FUNC]"
              endId="Package\Data Flow Task\Lookup TREE ITEM 2.Inputs[Lookup Input]"
              name="SUFFIX_FUNC"
              startId="Package\Data Flow Task\DAILY or FUNC.Outputs[SUFFIX_FUNC]" />
            <path
              refId="Package\Data Flow Task.Paths[Union All Output 1]"
              endId="Package\Data Flow Task\Union All 3.Inputs[Union All Input 4]"
              name="Union All Output 1"
              startId="Package\Data Flow Task\Union All.Outputs[Union All Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Union All Output 11]"
              endId="Package\Data Flow Task\Sort.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Data Flow Task\Union All 3.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Data Flow Task"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="256" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="240.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS"
          TopLeft="886.444444444444,449.666666666667" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\Data Flow Task\OLE DB Source"
          TopLeft="904.694444444444,43.4166666666666" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM"
          TopLeft="276.444444444444,594.666666666666" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1"
          TopLeft="924.444444444444,672" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 2"
          TopLeft="3484.44444444445,619.555555555556" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1"
          TopLeft="2288.88888888889,543.083333333333" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Data Flow Task\Resolve Tree 2"
          TopLeft="490.444444444444,665.333333333334" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1"
          TopLeft="682.444444444444,668" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2"
          TopLeft="3184.55555555556,544.999999999999" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW"
          TopLeft="4340.80808080808,461" />
        <NodeLayout
          Size="320,41.6"
          Id="Package\Data Flow Task\Script Component - SPLIT STRINGS AND COOKIES"
          TopLeft="826.694444444444,195.166666666667" />
        <NodeLayout
          Size="241.6,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS"
          TopLeft="2263.77777777778,456.75" />
        <NodeLayout
          Size="206.4,43.2"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2"
          TopLeft="4034.66666666667,613.194444444442" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2"
          TopLeft="1198.55555555555,594.666666666666" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2"
          TopLeft="4050.22222222223,543.194444444443" />
        <NodeLayout
          Size="206.4,43.2"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1"
          TopLeft="2280,616.416666666666" />
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\Data Flow Task\NOMATCH 2"
          TopLeft="500.777777777778,260" />
        <NodeLayout
          Size="208,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION"
          TopLeft="348.444444444445,446.666666666667" />
        <NodeLayout
          Size="132.8,41.6"
          Id="Package\Data Flow Task\NO MATCH"
          TopLeft="275.808080808081,259.141414141414" />
        <NodeLayout
          Size="280.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR_NEW"
          TopLeft="4020.66666666667,462.416666666666" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1"
          TopLeft="1465.55555555555,614.111111111111" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1"
          TopLeft="2033.66666666667,540.777777777778" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2"
          TopLeft="3484.44444444445,546.222222222222" />
        <NodeLayout
          Size="132,41.6"
          Id="Package\Data Flow Task\Union All 3"
          TopLeft="934.873015873015,788.523809523809" />
        <NodeLayout
          Size="300.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT_NEW"
          TopLeft="3135,462" />
        <NodeLayout
          Size="206.4,43.2"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 2"
          TopLeft="3755.77777777778,621.86111111111" />
        <NodeLayout
          Size="296.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES"
          TopLeft="1137.44444444444,450.222222222223" />
        <NodeLayout
          Size="240.8,41.6"
          Id="Package\Data Flow Task\Conditional Split  - PER DATABASE"
          TopLeft="865.444444444444,355.52380952381" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\Data Flow Task\DAILY or FUNC"
          TopLeft="370.444444444445,503" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 1"
          TopLeft="902.444444444444,594.666666666666" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1"
          TopLeft="2882.86363636364,548.11111111111" />
        <NodeLayout
          Size="206.4,43.2"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 1"
          TopLeft="2867.30808080808,618.111111111109" />
        <NodeLayout
          Size="272,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT"
          TopLeft="1725.22222222222,455.555555555556" />
        <NodeLayout
          Size="240.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE"
          TopLeft="2007.44444444445,455.555555555556" />
        <NodeLayout
          Size="252,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR"
          TopLeft="2526.88888888889,458.972222222222" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1"
          TopLeft="2033.66666666667,614.111111111112" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1"
          TopLeft="1774.77777777778,538.555555555555" />
        <NodeLayout
          Size="123.2,41.6"
          Id="Package\Data Flow Task\Union All"
          TopLeft="400.444444444445,784" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2"
          TopLeft="3764.66666666667,548.527777777777" />
        <NodeLayout
          Size="268.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE_NEW"
          TopLeft="3458.22222222223,461" />
        <NodeLayout
          Size="174.4,41.6"
          Id="Package\Data Flow Task\CSV File Destination"
          TopLeft="912.444444444444,947" />
        <NodeLayout
          Size="100,41.6"
          Id="Package\Data Flow Task\Sort"
          TopLeft="945.444444444444,856" />
        <NodeLayout
          Size="265.6,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE"
          TopLeft="1446,454.444444444445" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1"
          TopLeft="1774.77777777778,611.888888888889" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1"
          TopLeft="662.444444444444,590.666666666666" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Data Flow Task\Resolve Tree"
          TopLeft="292.444444444444,667" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1"
          TopLeft="2556.44444444445,539.749999999999" />
        <NodeLayout
          Size="206.4,43.2"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1 2 1"
          TopLeft="4354.80808080808,611.777777777776" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 2"
          TopLeft="3184.55555555556,618.333333333333" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 2"
          TopLeft="471.444444444444,593" />
        <NodeLayout
          Size="299.2,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013"
          TopLeft="2812.47474747475,462.333333333333" />
        <NodeLayout
          Size="271.2,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS_NEW"
          TopLeft="3739.55555555556,462.194444444444" />
        <NodeLayout
          Size="206.4,43.2"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1 1 1 1 1 1"
          TopLeft="2540.88888888889,609.749999999998" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1"
          TopLeft="1465.55555555555,540.777777777777" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\Data Flow Task\Resolve Tree 1 1 1"
          TopLeft="1209.55555555555,669" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1"
          TopLeft="4370.36363636364,541.777777777777" />
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\Data Flow Task\Aggregate 1"
          TopLeft="918.444444444444,269" />
        <NodeLayout
          Size="216.8,41.6"
          Id="Package\Data Flow Task\Lookup TAB DESCRIPTION 1"
          TopLeft="648.444444444444,448.666666666667" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Union All Output 11]"
          TopLeft="998.158730158729,830.523809523809">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.4761904761911"
              Start="0,0"
              End="0,17.9761904761911">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.9761904761911" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Union All Output 1]"
          TopLeft="523.444444444445,807.261904761904">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="411.42857142857,0"
              Start="0,0"
              End="403.92857142857,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="403.92857142857,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[SUFFIX_FUNC]"
          TopLeft="470.444444444444,545">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86.5,48"
              Start="0,0"
              End="86.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5"
                    Point2="0,19.5"
                    Point3="4,19.5" />
                  <mssgle:LineSegment
                    End="82.5,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="82.5,19.5"
                    Point2="86.5,19.5"
                    Point3="86.5,23.5" />
                  <mssgle:LineSegment
                    End="86.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="11.52306640625,24.5,63.4538671875,10.8671875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[SUFFIX_DAILY]"
          TopLeft="422.444444444445,545">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.5,49.6666666666659"
              Start="0,0"
              End="-60.5,42.1666666666659">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.177083333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.177083333333"
                    Point2="0,20.177083333333"
                    Point3="-4,20.177083333333" />
                  <mssgle:LineSegment
                    End="-56.5,20.177083333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.5,20.177083333333"
                    Point2="-60.5,20.177083333333"
                    Point3="-60.5,24.177083333333" />
                  <mssgle:LineSegment
                    End="-60.5,42.1666666666659" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-63.494609375,25.177083333333,66.48921875,10.8671875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Sort Output]"
          TopLeft="997.444444444444,898">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 116]"
          TopLeft="2122.66666666667,656.111111111112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1101.12698412699,132.412698412697"
              Start="0,0"
              End="-1101.12698412699,124.912698412697">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.49615055603" />
                  <mssgle:CubicBezierSegment
                    Point1="0,74.49615055603"
                    Point2="0,78.49615055603"
                    Point3="-4,78.49615055603" />
                  <mssgle:LineSegment
                    End="-1097.12698412699,78.49615055603" />
                  <mssgle:CubicBezierSegment
                    Point1="-1097.12698412699,78.49615055603"
                    Point2="-1101.12698412699,78.49615055603"
                    Point3="-1101.12698412699,82.49615055603" />
                  <mssgle:LineSegment
                    End="-1101.12698412699,124.912698412697" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-570.516578000995,83.49615055603,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 115]"
          TopLeft="2383,659.416666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1347.68253968254,129.107142857143"
              Start="0,0"
              End="-1347.68253968254,121.607142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,83.3458346892287" />
                  <mssgle:CubicBezierSegment
                    Point1="0,83.3458346892287"
                    Point2="0,87.3458346892287"
                    Point3="-4,87.3458346892287" />
                  <mssgle:LineSegment
                    End="-1343.68253968254,87.3458346892287" />
                  <mssgle:CubicBezierSegment
                    Point1="-1343.68253968254,87.3458346892287"
                    Point2="-1347.68253968254,87.3458346892287"
                    Point3="-1347.68253968254,91.3458346892287" />
                  <mssgle:LineSegment
                    End="-1347.68253968254,121.607142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-693.79435577877,92.3458346892287,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 114]"
          TopLeft="987.069444444444,237.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.833333333333"
              Start="0,0"
              End="0,24.333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.9530859375,6.4498697916665,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 113]"
          TopLeft="3273.55555555556,660.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2221.95526695527,128.190476190476"
              Start="0,0"
              End="-2221.95526695527,120.690476190476">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100.100990731863" />
                  <mssgle:CubicBezierSegment
                    Point1="0,100.100990731863"
                    Point2="0,104.100990731863"
                    Point3="-4,104.100990731863" />
                  <mssgle:LineSegment
                    End="-2217.95526695527,104.100990731863" />
                  <mssgle:CubicBezierSegment
                    Point1="-2217.95526695527,104.100990731863"
                    Point2="-2221.95526695527,104.100990731863"
                    Point3="-2221.95526695527,108.100990731863" />
                  <mssgle:LineSegment
                    End="-2221.95526695527,120.690476190476" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1130.93071941513,109.100990731863,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 112]"
          TopLeft="3858.77777777778,664.86111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2805.44322344323,123.662698412699"
              Start="0,0"
              End="-2805.44322344323,116.162698412699">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.6137284701121" />
                  <mssgle:CubicBezierSegment
                    Point1="0,98.6137284701121"
                    Point2="0,102.613728470112"
                    Point3="-4,102.613728470112" />
                  <mssgle:LineSegment
                    End="-2801.44322344323,102.613728470112" />
                  <mssgle:CubicBezierSegment
                    Point1="-2801.44322344323,102.613728470112"
                    Point2="-2805.44322344323,102.613728470112"
                    Point3="-2805.44322344323,106.613728470112" />
                  <mssgle:LineSegment
                    End="-2805.44322344323,116.162698412699" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1422.67469765912,107.613728470112,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 111]"
          TopLeft="2643.88888888889,652.749999999998">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1594.79365079365,135.773809523811"
              Start="0,0"
              End="-1594.79365079365,128.273809523811">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,102.962391057219" />
                  <mssgle:CubicBezierSegment
                    Point1="0,102.962391057219"
                    Point2="0,106.962391057219"
                    Point3="-4,106.962391057219" />
                  <mssgle:LineSegment
                    End="-1590.79365079365,106.962391057219" />
                  <mssgle:CubicBezierSegment
                    Point1="-1590.79365079365,106.962391057219"
                    Point2="-1594.79365079365,106.962391057219"
                    Point3="-1594.79365079365,110.962391057219" />
                  <mssgle:LineSegment
                    End="-1594.79365079365,128.273809523811" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-817.349911334325,111.962391057219,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 110]"
          TopLeft="1863.77777777778,653.888888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-856.015873015874,134.63492063492"
              Start="0,0"
              End="-856.015873015874,127.13492063492">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.0241055569651" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.0241055569651"
                    Point2="0,71.0241055569651"
                    Point3="-4,71.0241055569651" />
                  <mssgle:LineSegment
                    End="-852.015873015874,71.0241055569651" />
                  <mssgle:CubicBezierSegment
                    Point1="-852.015873015874,71.0241055569651"
                    Point2="-856.015873015874,71.0241055569651"
                    Point3="-856.015873015874,75.0241055569651" />
                  <mssgle:LineSegment
                    End="-856.015873015874,127.13492063492" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-447.961022445437,76.0241055569651,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 19]"
          TopLeft="3573.44444444445,661.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2520.90476190477,126.968253968253"
              Start="0,0"
              End="-2520.90476190477,119.468253968253">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100.314167160639" />
                  <mssgle:CubicBezierSegment
                    Point1="0,100.314167160639"
                    Point2="0,104.314167160639"
                    Point3="-4,104.314167160639" />
                  <mssgle:LineSegment
                    End="-2516.90476190477,104.314167160639" />
                  <mssgle:CubicBezierSegment
                    Point1="-2516.90476190477,104.314167160639"
                    Point2="-2520.90476190477,104.314167160639"
                    Point3="-2520.90476190477,108.314167160639" />
                  <mssgle:LineSegment
                    End="-2520.90476190477,119.468253968253" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1280.40546688989,109.314167160639,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 18]"
          TopLeft="2970.30808080808,661.111111111109">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1919.83506493507,127.4126984127"
              Start="0,0"
              End="-1919.83506493507,119.9126984127">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.0538603791041" />
                  <mssgle:CubicBezierSegment
                    Point1="0,98.0538603791041"
                    Point2="0,102.053860379104"
                    Point3="-4,102.053860379104" />
                  <mssgle:LineSegment
                    End="-1915.83506493507,102.053860379104" />
                  <mssgle:CubicBezierSegment
                    Point1="-1915.83506493507,102.053860379104"
                    Point2="-1919.83506493507,102.053860379104"
                    Point3="-1919.83506493507,106.053860379104" />
                  <mssgle:LineSegment
                    End="-1919.83506493507,119.9126984127" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-979.870618405035,107.053860379104,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 17]"
          TopLeft="363.444444444444,709">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79.3333333333334,75"
              Start="0,0"
              End="79.3333333333334,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.422150882825" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.422150882825"
                    Point2="0,44.422150882825"
                    Point3="4,44.422150882825" />
                  <mssgle:LineSegment
                    End="75.3333333333334,44.422150882825" />
                  <mssgle:CubicBezierSegment
                    Point1="75.3333333333334,44.422150882825"
                    Point2="79.3333333333334,44.422150882825"
                    Point3="79.3333333333334,48.422150882825" />
                  <mssgle:LineSegment
                    End="79.3333333333334,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="19.7135807291667,49.422150882825,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 16]"
          TopLeft="4457.80808080808,654.777777777776">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3403.20173160173,133.746031746033"
              Start="0,0"
              End="-3403.20173160173,126.246031746033">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,108.784132392311" />
                  <mssgle:CubicBezierSegment
                    Point1="0,108.784132392311"
                    Point2="0,112.784132392311"
                    Point3="-4,112.784132392311" />
                  <mssgle:LineSegment
                    End="-3399.20173160173,112.784132392311" />
                  <mssgle:CubicBezierSegment
                    Point1="-3399.20173160173,112.784132392311"
                    Point2="-3403.20173160173,112.784132392311"
                    Point3="-3403.20173160173,116.784132392311" />
                  <mssgle:LineSegment
                    End="-3403.20173160173,126.246031746033" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1721.55395173836,117.784132392311,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 15]"
          TopLeft="1554.55555555555,656.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-560.571428571429,132.412698412698"
              Start="0,0"
              End="-560.571428571429,124.912698412698">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.8518142603397" />
                  <mssgle:CubicBezierSegment
                    Point1="0,65.8518142603397"
                    Point2="0,69.8518142603397"
                    Point3="-4,69.8518142603397" />
                  <mssgle:LineSegment
                    End="-556.571428571429,69.8518142603397" />
                  <mssgle:CubicBezierSegment
                    Point1="-556.571428571429,69.8518142603397"
                    Point2="-560.571428571429,69.8518142603397"
                    Point3="-560.571428571429,73.8518142603397" />
                  <mssgle:LineSegment
                    End="-560.571428571429,124.912698412698" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-300.238800223215,74.8518142603397,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 14]"
          TopLeft="561.444444444444,707.333333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-80.333333333333,76.6666666666659"
              Start="0,0"
              End="-80.333333333333,69.1666666666659">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.4093097913318" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.4093097913318"
                    Point2="0,45.4093097913318"
                    Point3="-4,45.4093097913318" />
                  <mssgle:LineSegment
                    End="-76.333333333333,45.4093097913318" />
                  <mssgle:CubicBezierSegment
                    Point1="-76.333333333333,45.4093097913318"
                    Point2="-80.333333333333,45.4093097913318"
                    Point3="-80.333333333333,49.4093097913318" />
                  <mssgle:LineSegment
                    End="-80.333333333333,69.1666666666659" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1197526041665,50.4093097913318,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 13]"
          TopLeft="4137.66666666667,656.194444444442">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3083.6507936508,132.329365079367"
              Start="0,0"
              End="-3083.6507936508,124.829365079367">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,106.753925120774" />
                  <mssgle:CubicBezierSegment
                    Point1="0,106.753925120774"
                    Point2="0,110.753925120774"
                    Point3="-4,110.753925120774" />
                  <mssgle:LineSegment
                    End="-3079.6507936508,110.753925120774" />
                  <mssgle:CubicBezierSegment
                    Point1="-3079.6507936508,110.753925120774"
                    Point2="-3083.6507936508,110.753925120774"
                    Point3="-3083.6507936508,114.753925120774" />
                  <mssgle:LineSegment
                    End="-3083.6507936508,124.829365079367" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1561.7784827629,115.753925120774,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 12]"
          TopLeft="753.444444444444,710">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="210.228571428571,78.523809523809"
              Start="0,0"
              End="210.228571428571,71.023809523809">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.6684749849303" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.6684749849303"
                    Point2="0,54.6684749849303"
                    Point3="4,54.6684749849303" />
                  <mssgle:LineSegment
                    End="206.228571428571,54.6684749849303" />
                  <mssgle:CubicBezierSegment
                    Point1="206.228571428571,54.6684749849303"
                    Point2="210.228571428571,54.6684749849303"
                    Point3="210.228571428571,58.6684749849303" />
                  <mssgle:LineSegment
                    End="210.228571428571,71.023809523809" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="85.1611997767855,59.6684749849303,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 11]"
          TopLeft="991.958730158729,714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74.523809523809"
              Start="0,0"
              End="0,67.023809523809">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.023809523809" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.9530859375,27.7951078869045,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 1]"
          TopLeft="1294.05555555555,711">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-313.849206349207,77.523809523809"
              Start="0,0"
              End="-313.849206349207,70.023809523809">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.9572284003418" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.9572284003418"
                    Point2="0,45.9572284003418"
                    Point3="-4,45.9572284003418" />
                  <mssgle:LineSegment
                    End="-309.849206349207,45.9572284003418" />
                  <mssgle:CubicBezierSegment
                    Point1="-309.849206349207,45.9572284003418"
                    Point2="-313.849206349207,45.9572284003418"
                    Point3="-313.849206349207,49.9572284003418" />
                  <mssgle:LineSegment
                    End="-313.849206349207,70.023809523809" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-176.877689112103,50.9572284003418,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[OLE DB Source Output]"
          TopLeft="983.694444444444,85.4166666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,109.75"
              Start="0,0"
              End="0,102.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,102.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup No Match Output1]"
          TopLeft="723.777777777778,590.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-153.5,-288.666666666666"
              Start="0,0"
              End="-153.5,-281.166666666666">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-112.992657856094" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-112.992657856094"
                    Point2="0,-116.992657856094"
                    Point3="-4,-116.992657856094" />
                  <mssgle:LineSegment
                    End="-149.5,-116.992657856094" />
                  <mssgle:CubicBezierSegment
                    Point1="-149.5,-116.992657856094"
                    Point2="-153.5,-116.992657856094"
                    Point3="-153.5,-120.992657856094" />
                  <mssgle:LineSegment
                    End="-153.5,-281.166666666666" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-132.55638671875,-111.992657856094,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup No Match Output]"
          TopLeft="338.542929292929,594.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-293.525252525252"
              Start="0,0"
              End="0,-286.025252525252">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-286.025252525252" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,-148.817313762626,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output30]"
          TopLeft="2123.16666666667,582.777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333342"
              Start="0,0"
              End="0,23.8333333333342">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333342" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.1119791666671,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output29]"
          TopLeft="362.694444444445,636.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.3333333333341"
              Start="0,0"
              End="0,22.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,5.61197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output28]"
          TopLeft="4459.08585858586,583.777777777777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9999999999995"
              Start="0,0"
              End="0,20.4999999999995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4999999999995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,4.44531249999975,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output27]"
          TopLeft="3875.05555555556,504.194444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.3888888888905,44.333333333333"
              Start="0,0"
              End="-20.3888888888905,36.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.1666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.1666666666665"
                    Point2="0,22.1666666666665"
                    Point3="-4,22.1666666666665" />
                  <mssgle:LineSegment
                    End="-16.3888888888905,22.1666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.3888888888905,22.1666666666665"
                    Point2="-20.3888888888905,22.1666666666665"
                    Point3="-20.3888888888905,26.1666666666665" />
                  <mssgle:LineSegment
                    End="-20.3888888888905,36.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-58.3858311631952,27.1666666666665,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output26]"
          TopLeft="1555.05555555555,582.777777777777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333341"
              Start="0,0"
              End="0,23.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.11197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output25]"
          TopLeft="3285.5,504">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.9444444444398,40.999999999999"
              Start="0,0"
              End="-10.9444444444398,33.499999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4999999999995" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4999999999995"
                    Point2="0,20.4999999999995"
                    Point3="-4,20.4999999999995" />
                  <mssgle:LineSegment
                    End="-6.9444444444398,20.4999999999995" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.9444444444398,20.4999999999995"
                    Point2="-10.9444444444398,20.4999999999995"
                    Point3="-10.9444444444398,24.4999999999995" />
                  <mssgle:LineSegment
                    End="-10.9444444444398,33.499999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-53.6636089409699,25.4999999999995,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output24]"
          TopLeft="4161.16666666667,504.416666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.9444444444398,38.777777777777"
              Start="0,0"
              End="-20.9444444444398,31.277777777777">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.3888888888885" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.3888888888885"
                    Point2="0,19.3888888888885"
                    Point3="-4,19.3888888888885" />
                  <mssgle:LineSegment
                    End="-16.9444444444398,19.3888888888885" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.9444444444398,19.3888888888885"
                    Point2="-20.9444444444398,19.3888888888885"
                    Point3="-20.9444444444398,23.3888888888885" />
                  <mssgle:LineSegment
                    End="-20.9444444444398,31.277777777777" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-58.6636089409699,24.3888888888885,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output23]"
          TopLeft="1864.27777777778,580.555555555555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333341"
              Start="0,0"
              End="0,23.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.11197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output22]"
          TopLeft="4138.94444444445,585.194444444443">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9999999999995"
              Start="0,0"
              End="0,20.4999999999995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4999999999995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,4.44531249999975,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output21]"
          TopLeft="3856.72222222223,590.527777777777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333335"
              Start="0,0"
              End="0,23.8333333333335">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333335" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.11197916666675,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output20]"
          TopLeft="1287.25,492.222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,102.444444444443"
              Start="0,0"
              End="0,94.9444444444429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.9444444444429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,41.6675347222214,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output19]"
          TopLeft="2645.16666666667,581.749999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9999999999995"
              Start="0,0"
              End="0,20.4999999999995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4999999999995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,4.44531249999975,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output18]"
          TopLeft="4479.30808080808,503">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47.6111111111068,38.7777777777769"
              Start="0,0"
              End="-47.6111111111068,31.2777777777769">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0616740088101" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.0616740088101"
                    Point2="0,23.0616740088101"
                    Point3="-4,23.0616740088101" />
                  <mssgle:LineSegment
                    End="-43.6111111111068,23.0616740088101" />
                  <mssgle:CubicBezierSegment
                    Point1="-43.6111111111068,23.0616740088101"
                    Point2="-47.6111111111068,23.0616740088101"
                    Point3="-47.6111111111068,27.0616740088101" />
                  <mssgle:LineSegment
                    End="-47.6111111111068,31.2777777777769" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-71.9969422743034,28.0616740088101,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output17]"
          TopLeft="3592.72222222223,503">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.277777777781,43.2222222222222"
              Start="0,0"
              End="-18.277777777781,35.7222222222222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.6111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.6111111111111"
                    Point2="0,21.6111111111111"
                    Point3="-4,21.6111111111111" />
                  <mssgle:LineSegment
                    End="-14.277777777781,21.6111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.277777777781,21.6111111111111"
                    Point2="-18.277777777781,21.6111111111111"
                    Point3="-18.277777777781,25.6111111111111" />
                  <mssgle:LineSegment
                    End="-18.277777777781,35.7222222222222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-57.3302756076405,26.6111111111111,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output16]"
          TopLeft="756.944444444444,490.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.1666666666666,99.9999999999989"
              Start="0,0"
              End="24.1666666666666,92.4999999999989">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.4713656387659" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.4713656387659"
                    Point2="0,59.4713656387659"
                    Point3="4,59.4713656387659" />
                  <mssgle:LineSegment
                    End="20.1666666666666,59.4713656387659" />
                  <mssgle:CubicBezierSegment
                    Point1="20.1666666666666,59.4713656387659"
                    Point2="24.1666666666666,59.4713656387659"
                    Point3="24.1666666666666,63.4713656387659" />
                  <mssgle:LineSegment
                    End="24.1666666666666,92.4999999999989" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.1080533854167,64.4713656387659,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output15]"
          TopLeft="2961.97474747475,504.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.8888888888923,43.7777777777768"
              Start="0,0"
              End="10.8888888888923,36.2777777777768">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.8888888888884" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.8888888888884"
                    Point2="0,21.8888888888884"
                    Point3="4,21.8888888888884" />
                  <mssgle:LineSegment
                    End="6.88888888889232,21.8888888888884" />
                  <mssgle:CubicBezierSegment
                    Point1="6.88888888889232,21.8888888888884"
                    Point2="10.8888888888923,21.8888888888884"
                    Point3="10.8888888888923,25.8888888888884" />
                  <mssgle:LineSegment
                    End="10.8888888888923,36.2777777777768" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-42.7469422743038,26.8888888888884,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output14]"
          TopLeft="1579,496.444444444445">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.44444444445,44.333333333332"
              Start="0,0"
              End="-23.44444444445,36.833333333332">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.166666666666" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.166666666666"
                    Point2="0,22.166666666666"
                    Point3="-4,22.166666666666" />
                  <mssgle:LineSegment
                    End="-19.44444444445,22.166666666666" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.44444444445,22.166666666666"
                    Point2="-23.44444444445,22.166666666666"
                    Point3="-23.44444444445,26.166666666666" />
                  <mssgle:LineSegment
                    End="-23.44444444445,36.833333333332" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.913608940975,27.166666666666,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output13]"
          TopLeft="2649.66666666667,500.972222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.7777777777767"
              Start="0,0"
              End="0,31.2777777777767">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.2777777777767" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,9.83420138888835,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output12]"
          TopLeft="2125.80555555556,497.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.2222222222219"
              Start="0,0"
              End="0,35.7222222222219">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7222222222219" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,12.056423611111,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output11]"
          TopLeft="3573.94444444445,588.222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333342"
              Start="0,0"
              End="0,23.8333333333342">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333342" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.1119791666671,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output10]"
          TopLeft="1863,497.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.999999999999"
              Start="0,0"
              End="0,33.499999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.499999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,10.9453124999995,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output9]"
          TopLeft="3274.05555555556,586.999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333341"
              Start="0,0"
              End="0,23.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.11197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output8]"
          TopLeft="452.444444444445,488.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="70,35.333333333333"
              Start="0,0"
              End="62.5,35.333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.333333333333"
                    Point2="0,35.333333333333"
                    Point3="4,35.333333333333" />
                  <mssgle:LineSegment
                    End="62.5,35.333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.94138671875,40.333333333333,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output7]"
          TopLeft="559.194444444444,635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.3333333333341"
              Start="0,0"
              End="0,22.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,5.61197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output6]"
          TopLeft="1291.30555555556,636.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3333333333341"
              Start="0,0"
              End="0,24.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.61197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output5]"
          TopLeft="2381.83333333333,498.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.3333333333327"
              Start="0,0"
              End="0,36.8333333333327">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.8333333333327" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,12.6119791666664,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output4]"
          TopLeft="1006.94444444444,491.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.5,102.999999999999"
              Start="0,0"
              End="-14.5,95.4999999999989">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.4999999999995" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.4999999999995"
                    Point2="0,51.4999999999995"
                    Point3="-4,51.4999999999995" />
                  <mssgle:LineSegment
                    End="-10.5,51.4999999999995" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.5,51.4999999999995"
                    Point2="-14.5,51.4999999999995"
                    Point3="-14.5,55.4999999999995" />
                  <mssgle:LineSegment
                    End="-14.5,95.4999999999989" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.44138671875,56.4999999999995,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output3]"
          TopLeft="2971.58585858586,590.11111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9999999999995"
              Start="0,0"
              End="0,20.4999999999995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4999999999995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,4.44531249999975,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output2]"
          TopLeft="993.944444444444,636.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.3333333333341"
              Start="0,0"
              End="0,27.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,8.11197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output1]"
          TopLeft="2380.94444444445,585.083333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333335"
              Start="0,0"
              End="0,23.8333333333335">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333335" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.11197916666675,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output]"
          TopLeft="752.944444444444,632.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.3333333333341"
              Start="0,0"
              End="0,27.8333333333341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.8333333333341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,8.11197916666705,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_RANDGR_NEW]"
          TopLeft="1073.31944444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="3087.84722222223,64.892857142856"
              Start="0,0"
              End="3087.84722222223,57.392857142856">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.99235731721472" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.99235731721472"
                    Point2="0,13.9923573172147"
                    Point3="4,13.9923573172147" />
                  <mssgle:LineSegment
                    End="3083.84722222223,13.9923573172147" />
                  <mssgle:CubicBezierSegment
                    Point1="3083.84722222223,13.9923573172147"
                    Point2="3087.84722222223,13.9923573172147"
                    Point3="3087.84722222223,17.9923573172147" />
                  <mssgle:LineSegment
                    End="3087.84722222223,57.392857142856" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1494.33646267361,18.9923573172147,99.174296875,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_RANDGR]"
          TopLeft="1000.50694444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1652.38194444445,61.448412698412"
              Start="0,0"
              End="1652.38194444445,53.948412698412">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7482913397208" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.7482913397208"
                    Point2="0,28.7482913397208"
                    Point3="4,28.7482913397208" />
                  <mssgle:LineSegment
                    End="1648.38194444445,28.7482913397208" />
                  <mssgle:CubicBezierSegment
                    Point1="1648.38194444445,28.7482913397208"
                    Point2="1652.38194444445,28.7482913397208"
                    Point3="1652.38194444445,32.7482913397208" />
                  <mssgle:LineSegment
                    End="1652.38194444445,53.948412698412" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="789.841030815975,33.7482913397208,72.6998828125,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_POSTS_NEW]"
          TopLeft="1058.75694444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2816.29861111112,64.670634920634"
              Start="0,0"
              End="2816.29861111112,57.170634920634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.3365642677235" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.3365642677235"
                    Point2="0,18.3365642677235"
                    Point3="4,18.3365642677235" />
                  <mssgle:LineSegment
                    End="2812.29861111112,18.3365642677235" />
                  <mssgle:CubicBezierSegment
                    Point1="2812.29861111112,18.3365642677235"
                    Point2="2816.29861111112,18.3365642677235"
                    Point3="2816.29861111112,22.3365642677235" />
                  <mssgle:LineSegment
                    End="2816.29861111112,57.170634920634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1363.04715711806,23.3365642677235,90.204296875,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_POSTS]"
          TopLeft="985.944444444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1398.83333333334,59.22619047619"
              Start="0,0"
              End="1398.83333333334,51.72619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.613095238095" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.613095238095"
                    Point2="0,29.613095238095"
                    Point3="4,29.613095238095" />
                  <mssgle:LineSegment
                    End="1394.83333333334,29.613095238095" />
                  <mssgle:CubicBezierSegment
                    Point1="1394.83333333334,29.613095238095"
                    Point2="1398.83333333334,29.613095238095"
                    Point3="1398.83333333334,33.613095238095" />
                  <mssgle:LineSegment
                    End="1398.83333333334,51.72619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="667.75418619792,34.613095238095,63.3249609375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LOGIS_DISNOTES]"
          TopLeft="927.694444444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="358.249999999996,52.6984126984131"
              Start="0,0"
              End="358.249999999996,45.1984126984131">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.950622109309" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.950622109309"
                    Point2="0,17.950622109309"
                    Point3="4,17.950622109309" />
                  <mssgle:LineSegment
                    End="354.249999999996,17.950622109309" />
                  <mssgle:CubicBezierSegment
                    Point1="354.249999999996,17.950622109309"
                    Point2="358.249999999996,17.950622109309"
                    Point3="358.249999999996,21.950622109309" />
                  <mssgle:LineSegment
                    End="358.249999999996,45.1984126984131" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="122.077519531248,22.950622109309,114.0949609375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LOGIS_BOE]"
          TopLeft="942.256944444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="636.743055555556,56.9206349206351"
              Start="0,0"
              End="636.743055555556,49.4206349206351">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.1588407720812" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.1588407720812"
                    Point2="0,22.1588407720812"
                    Point3="4,22.1588407720812" />
                  <mssgle:LineSegment
                    End="632.743055555556,22.1588407720812" />
                  <mssgle:CubicBezierSegment
                    Point1="632.743055555556,22.1588407720812"
                    Point2="636.743055555556,22.1588407720812"
                    Point3="636.743055555556,26.1588407720812" />
                  <mssgle:LineSegment
                    End="636.743055555556,49.4206349206351" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="275.498578559028,27.1588407720812,85.7458984375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LOGIS]"
          TopLeft="913.131944444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93.8125,52.1428571428571"
              Start="0,0"
              End="93.8125,44.6428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.7844667409885" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.7844667409885"
                    Point2="0,14.7844667409885"
                    Point3="4,14.7844667409885" />
                  <mssgle:LineSegment
                    End="89.8125,14.7844667409885" />
                  <mssgle:CubicBezierSegment
                    Point1="89.8125,14.7844667409885"
                    Point2="93.8125,14.7844667409885"
                    Point3="93.8125,18.7844667409885" />
                  <mssgle:LineSegment
                    End="93.8125,44.6428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.01376953125,19.7844667409885,61.7849609375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LEAVE_NEW]"
          TopLeft="1044.19444444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2548.52777777779,63.47619047619"
              Start="0,0"
              End="2548.52777777779,55.97619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.6218487394957" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.6218487394957"
                    Point2="0,21.6218487394957"
                    Point3="4,21.6218487394957" />
                  <mssgle:LineSegment
                    End="2544.52777777779,21.6218487394957" />
                  <mssgle:CubicBezierSegment
                    Point1="2544.52777777779,21.6218487394957"
                    Point2="2548.52777777779,21.6218487394957"
                    Point3="2548.52777777779,25.6218487394957" />
                  <mssgle:LineSegment
                    End="2548.52777777779,55.97619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1229.8617404514,26.6218487394957,88.804296875,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LEAVE]"
          TopLeft="971.381944444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1156.56250000001,58.031746031746"
              Start="0,0"
              End="1156.56250000001,50.531746031746">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.1498232193788" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.1498232193788"
                    Point2="0,27.1498232193788"
                    Point3="4,27.1498232193788" />
                  <mssgle:LineSegment
                    End="1152.56250000001,27.1498232193788" />
                  <mssgle:CubicBezierSegment
                    Point1="1152.56250000001,27.1498232193788"
                    Point2="1156.56250000001,27.1498232193788"
                    Point3="1156.56250000001,31.1498232193788" />
                  <mssgle:LineSegment
                    End="1156.56250000001,50.531746031746" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="547.358300781255,32.1498232193788,61.8458984375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LABOUR_NEW]"
          TopLeft="1087.88194444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="3391.42613636364,63.47619047619"
              Start="0,0"
              End="3391.42613636364,55.97619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,4.47300160513642" />
                  <mssgle:CubicBezierSegment
                    Point1="0,4.47300160513642"
                    Point2="0,8.47300160513642"
                    Point3="4,8.47300160513642" />
                  <mssgle:LineSegment
                    End="3387.42613636364,8.47300160513642" />
                  <mssgle:CubicBezierSegment
                    Point1="3387.42613636364,8.47300160513642"
                    Point2="3391.42613636364,8.47300160513642"
                    Point3="3391.42613636364,12.4730016051364" />
                  <mssgle:LineSegment
                    End="3391.42613636364,55.97619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1647.03591974432,13.4730016051364,97.354296875,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_LABOUR]"
          TopLeft="1015.06944444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1946.90530303031,64.809523809523"
              Start="0,0"
              End="1946.90530303031,57.309523809523">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.9503020087087" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.9503020087087"
                    Point2="0,27.9503020087087"
                    Point3="4,27.9503020087087" />
                  <mssgle:LineSegment
                    End="1942.90530303031,27.9503020087087" />
                  <mssgle:CubicBezierSegment
                    Point1="1942.90530303031,27.9503020087087"
                    Point2="1946.90530303031,27.9503020087087"
                    Point3="1946.90530303031,31.9503020087087" />
                  <mssgle:LineSegment
                    End="1946.90530303031,57.309523809523" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="938.012710108905,32.9503020087087,70.8798828125,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_HEADCOUNT_NEW]"
          TopLeft="1029.63194444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2255.86805555556,64.47619047619"
              Start="0,0"
              End="2255.86805555556,56.97619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.100170445118" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.100170445118"
                    Point2="0,25.100170445118"
                    Point3="4,25.100170445118" />
                  <mssgle:LineSegment
                    End="2251.86805555556,25.100170445118" />
                  <mssgle:CubicBezierSegment
                    Point1="2251.86805555556,25.100170445118"
                    Point2="2255.86805555556,25.100170445118"
                    Point3="2255.86805555556,29.100170445118" />
                  <mssgle:LineSegment
                    End="2255.86805555556,56.97619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1068.96687934028,30.100170445118,117.934296875,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_HEADCOUNT]"
          TopLeft="956.819444444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="904.402777777776,58.031746031746"
              Start="0,0"
              End="904.402777777776,50.531746031746">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0272603830126" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0272603830126"
                    Point2="0,25.0272603830126"
                    Point3="4,25.0272603830126" />
                  <mssgle:LineSegment
                    End="900.402777777776,25.0272603830126" />
                  <mssgle:CubicBezierSegment
                    Point1="900.402777777776,25.0272603830126"
                    Point2="904.402777777776,25.0272603830126"
                    Point3="904.402777777776,29.0272603830126" />
                  <mssgle:LineSegment
                    End="904.402777777776,50.531746031746" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="406.547677951388,30.0272603830126,91.307421875,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_FINANCIALS_RESP_SEG]"
          TopLeft="898.569444444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-141.625,51.1428571428571"
              Start="0,0"
              End="-141.625,43.6428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.02754852958269" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.02754852958269"
                    Point2="0,11.0275485295827"
                    Point3="-4,11.0275485295827" />
                  <mssgle:LineSegment
                    End="-137.625,11.0275485295827" />
                  <mssgle:CubicBezierSegment
                    Point1="-137.625,11.0275485295827"
                    Point2="-141.625,11.0275485295827"
                    Point3="-141.625,15.0275485295827" />
                  <mssgle:LineSegment
                    End="-141.625,43.6428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-140.6969921875,16.0275485295827,139.768984375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Dbase_FINANCIALS_CAP]"
          TopLeft="884.006944444444,397.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-431.562499999999,49.1428571428571"
              Start="0,0"
              End="-431.562499999999,41.6428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,2.55974317817013" />
                  <mssgle:CubicBezierSegment
                    Point1="0,2.55974317817013"
                    Point2="0,6.55974317817013"
                    Point3="-4,6.55974317817013" />
                  <mssgle:LineSegment
                    End="-427.562499999999,6.55974317817013" />
                  <mssgle:CubicBezierSegment
                    Point1="-427.562499999999,6.55974317817013"
                    Point2="-431.562499999999,6.55974317817013"
                    Point3="-431.562499999999,10.5597431781701" />
                  <mssgle:LineSegment
                    End="-431.562499999999,41.6428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-271.466171874999,11.5597431781701,111.36984375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Aggregate Output 1]"
          TopLeft="986.694444444444,311">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.52380952381"
              Start="0,0"
              End="0,37.02380952381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.02380952381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,10.511904761905,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DAILY_STRUCT_CAP]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[POSTS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[HEADCOUNT_NEW]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_NEW">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION POSTS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LOGIS_DISNOTES]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[RANDGR_NEW]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LEAVE]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LEAVE_NEW]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_DISNOTES">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LOGIS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LABOUR_OCT2013]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION HEADCOUNT">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION LEAVE">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION RANDGR">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[HEADCOUNT]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[POSTS_NEW]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION LOGIS_BOE">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[FINANCIALS_RESP_SEG]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[RANDGR]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[FUNCTIONAL_STRUCT_CAP]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION LABOUR_OCT2013">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LOGIS_BOE]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TREE ITEM 1 2 1 1 1 1 1 2 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LABOUR_NEW]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup TAB DESCRIPTION 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TABS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>